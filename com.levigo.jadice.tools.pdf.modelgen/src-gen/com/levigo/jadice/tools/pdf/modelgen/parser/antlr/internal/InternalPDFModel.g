/*
* generated by Xtext
*/
grammar InternalPDFModel;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package com.levigo.jadice.tools.pdf.modelgen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.levigo.jadice.tools.pdf.modelgen.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.levigo.jadice.tools.pdf.modelgen.services.PDFModelGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private PDFModelGrammarAccess grammarAccess;
 	
    public InternalPDFModelParser(TokenStream input, PDFModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "PDFModel";	
   	}
   	
   	@Override
   	protected PDFModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePDFModel
entryRulePDFModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPDFModelRule()); }
	 iv_rulePDFModel=rulePDFModel 
	 { $current=$iv_rulePDFModel.current; } 
	 EOF 
;

// Rule PDFModel
rulePDFModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPDFModelAccess().getPackagesPackageDeclarationParserRuleCall_0()); 
	    }
		lv_packages_0_0=rulePackageDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPDFModelRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_0_0, 
        		"PackageDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleAbstractDeclaration
entryRuleAbstractDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDeclarationRule()); }
	 iv_ruleAbstractDeclaration=ruleAbstractDeclaration 
	 { $current=$iv_ruleAbstractDeclaration.current; } 
	 EOF 
;

// Rule AbstractDeclaration
ruleAbstractDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDeclarationAccess().getDictionaryDeclarationParserRuleCall_0()); 
    }
    this_DictionaryDeclaration_0=ruleDictionaryDeclaration
    { 
        $current = $this_DictionaryDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDeclarationAccess().getNameEnumDeclarationParserRuleCall_1()); 
    }
    this_NameEnumDeclaration_1=ruleNameEnumDeclaration
    { 
        $current = $this_NameEnumDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDeclarationAccess().getArrayMappedDeclarationParserRuleCall_2()); 
    }
    this_ArrayMappedDeclaration_2=ruleArrayMappedDeclaration
    { 
        $current = $this_ArrayMappedDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDeclarationAccess().getBitFlagsDeclarationParserRuleCall_3()); 
    }
    this_BitFlagsDeclaration_3=ruleBitFlagsDeclaration
    { 
        $current = $this_BitFlagsDeclaration_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpecificationReference
entryRuleSpecificationReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificationReferenceRule()); }
	 iv_ruleSpecificationReference=ruleSpecificationReference 
	 { $current=$iv_ruleSpecificationReference.current; } 
	 EOF 
;

// Rule SpecificationReference
ruleSpecificationReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@spec-ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpecificationReferenceAccess().getSpecRefKeyword_0());
    }
	otherlv_1='ISO32000-1:2008' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpecificationReferenceAccess().getISO3200012008Keyword_1());
    }
	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecificationReferenceAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationReferenceAccess().getSectionSectionReferenceParserRuleCall_3_0()); 
	    }
		lv_section_3_0=ruleSectionReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationReferenceRule());
	        }
       		set(
       			$current, 
       			"section",
        		lv_section_3_0, 
        		"SectionReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpecificationReferenceAccess().getCommaKeyword_4_0());
    }
	otherlv_5='table' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpecificationReferenceAccess().getTableKeyword_4_1());
    }
(
(
		lv_table_6_0=RULE_INT
		{
			newLeafNode(lv_table_6_0, grammarAccess.getSpecificationReferenceAccess().getTableINTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificationReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"table",
        		lv_table_6_0, 
        		"INT");
	    }

)
))?)
;





// Entry rule entryRuleSectionReference
entryRuleSectionReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionReferenceRule()); }
	 iv_ruleSectionReference=ruleSectionReference 
	 { $current=$iv_ruleSectionReference.current; } 
	 EOF 
;

// Rule SectionReference
ruleSectionReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionReferenceAccess().getSectionKeyword_0());
    }
(
(
		lv_section_1_0=RULE_STRING
		{
			newLeafNode(lv_section_1_0, grammarAccess.getSectionReferenceAccess().getSectionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"section",
        		lv_section_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleArrayMappedDeclaration
entryRuleArrayMappedDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayMappedDeclarationRule()); }
	 iv_ruleArrayMappedDeclaration=ruleArrayMappedDeclaration 
	 { $current=$iv_ruleArrayMappedDeclaration.current; } 
	 EOF 
;

// Rule ArrayMappedDeclaration
ruleArrayMappedDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='array-mapped' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayMappedDeclarationAccess().getArrayMappedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedDeclarationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayMappedDeclarationAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0()); 
	    }
		lv_since_3_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedDeclarationRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_3_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrayMappedDeclarationAccess().getRightParenthesisKeyword_2_2());
    }
)?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayMappedDeclarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedDeclarationAccess().getEntriesArrayMappedEntryParserRuleCall_4_0()); 
	    }
		lv_entries_6_0=ruleArrayMappedEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedDeclarationRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_6_0, 
        		"ArrayMappedEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArrayMappedDeclarationAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleArrayMappedEntry
entryRuleArrayMappedEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayMappedEntryRule()); }
	 iv_ruleArrayMappedEntry=ruleArrayMappedEntry 
	 { $current=$iv_ruleArrayMappedEntry.current; } 
	 EOF 
;

// Rule ArrayMappedEntry
ruleArrayMappedEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_index_0_0=RULE_INT
		{
			newLeafNode(lv_index_0_0, grammarAccess.getArrayMappedEntryAccess().getIndexINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_0_0, 
        		"INT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayMappedEntryAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedEntryAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedEntryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_cached_3_0=	'cached' 
    {
        newLeafNode(lv_cached_3_0, grammarAccess.getArrayMappedEntryAccess().getCachedCachedKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed($current, "cached", true, "cached");
	    }

)
)?(
(
		lv_required_4_0=	'required' 
    {
        newLeafNode(lv_required_4_0, grammarAccess.getArrayMappedEntryAccess().getRequiredRequiredKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_nullable_5_0=	'nullable' 
    {
        newLeafNode(lv_nullable_5_0, grammarAccess.getArrayMappedEntryAccess().getNullableNullableKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed($current, "nullable", true, "nullable");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_6_0()); 
	    }
		lv_indirectReference_6_0=ruleIndirectReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedEntryRule());
	        }
       		set(
       			$current, 
       			"indirectReference",
        		lv_indirectReference_6_0, 
        		"IndirectReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedEntryAccess().getValueAbstractEntryValueParserRuleCall_7_0()); 
	    }
		lv_value_7_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedEntryRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getArrayMappedEntryAccess().getLeftParenthesisKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedEntryAccess().getSinceSinceVersionEnumRuleCall_8_1_0()); 
	    }
		lv_since_9_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayMappedEntryRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_9_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getArrayMappedEntryAccess().getRightParenthesisKeyword_8_2());
    }
)?(
(
		lv_requiresCustomValidation_11_0=	'custom-validation' 
    {
        newLeafNode(lv_requiresCustomValidation_11_0, grammarAccess.getArrayMappedEntryAccess().getRequiresCustomValidationCustomValidationKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed($current, "requiresCustomValidation", true, "custom-validation");
	    }

)
)?(
(
		lv_requiresCustomDefault_12_0=	'custom-default' 
    {
        newLeafNode(lv_requiresCustomDefault_12_0, grammarAccess.getArrayMappedEntryAccess().getRequiresCustomDefaultCustomDefaultKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryRule());
	        }
       		setWithLastConsumed($current, "requiresCustomDefault", true, "custom-default");
	    }

)
)?	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getArrayMappedEntryAccess().getSemicolonKeyword_11());
    }
)
;





// Entry rule entryRuleDictionaryDeclaration
entryRuleDictionaryDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictionaryDeclarationRule()); }
	 iv_ruleDictionaryDeclaration=ruleDictionaryDeclaration 
	 { $current=$iv_ruleDictionaryDeclaration.current; } 
	 EOF 
;

// Rule DictionaryDeclaration
ruleDictionaryDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='dict-obj' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDictionaryDeclarationAccess().getDictObjKeyword_0_0());
    }

    |(
(
		lv_stream_1_0=	'stream-obj' 
    {
        newLeafNode(lv_stream_1_0, grammarAccess.getDictionaryDeclarationAccess().getStreamStreamObjKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryDeclarationRule());
	        }
       		setWithLastConsumed($current, "stream", true, "stream-obj");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDictionaryDeclarationAccess().getExtendsKeyword_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDictionaryDeclarationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDictionaryDeclarationAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0()); 
	    }
		lv_since_8_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryDeclarationRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_8_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDictionaryDeclarationAccess().getRightParenthesisKeyword_3_2());
    }
)?	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDictionaryDeclarationAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_11='config' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDictionaryDeclarationAccess().getConfigKeyword_5_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDictionaryDeclarationAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getSubtypeConfigSubtypeConfigParserRuleCall_5_2_0()); 
	    }
		lv_subtypeConfig_13_0=ruleSubtypeConfig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryDeclarationRule());
	        }
       		set(
       			$current, 
       			"subtypeConfig",
        		lv_subtypeConfig_13_0, 
        		"SubtypeConfig");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDictionaryDeclarationAccess().getRightCurlyBracketKeyword_5_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationAccess().getEntriesDictionaryEntryParserRuleCall_6_0()); 
	    }
		lv_entries_15_0=ruleDictionaryEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryDeclarationRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_15_0, 
        		"DictionaryEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDictionaryDeclarationAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSubtypeConfig
entryRuleSubtypeConfig returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubtypeConfigRule()); }
	 iv_ruleSubtypeConfig=ruleSubtypeConfig 
	 { $current=$iv_ruleSubtypeConfig.current; } 
	 EOF 
;

// Rule SubtypeConfig
ruleSubtypeConfig returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='subtypes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubtypeConfigAccess().getSubtypesKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubtypeConfigRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubtypeConfigAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubtypeConfigRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubtypeConfigAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDictionaryEntry
entryRuleDictionaryEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictionaryEntryRule()); }
	 iv_ruleDictionaryEntry=ruleDictionaryEntry 
	 { $current=$iv_ruleDictionaryEntry.current; } 
	 EOF 
;

// Rule DictionaryEntry
ruleDictionaryEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_key_0_0, grammarAccess.getDictionaryEntryAccess().getKeyNAME_OBJECTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"NAME_OBJECT");
	    }

)
)(	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDictionaryEntryAccess().getAsKeyword_1_0());
    }
(
(
		lv_alias_2_0=RULE_ID
		{
			newLeafNode(lv_alias_2_0, grammarAccess.getDictionaryEntryAccess().getAliasIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_2_0, 
        		"ID");
	    }

)
))?(
(
		lv_cached_3_0=	'cached' 
    {
        newLeafNode(lv_cached_3_0, grammarAccess.getDictionaryEntryAccess().getCachedCachedKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed($current, "cached", true, "cached");
	    }

)
)?(
(
		lv_required_4_0=	'required' 
    {
        newLeafNode(lv_required_4_0, grammarAccess.getDictionaryEntryAccess().getRequiredRequiredKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_inheritable_5_0=	'inheritable' 
    {
        newLeafNode(lv_inheritable_5_0, grammarAccess.getDictionaryEntryAccess().getInheritableInheritableKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed($current, "inheritable", true, "inheritable");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_5_0()); 
	    }
		lv_indirectReference_6_0=ruleIndirectReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryEntryRule());
	        }
       		set(
       			$current, 
       			"indirectReference",
        		lv_indirectReference_6_0, 
        		"IndirectReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryEntryAccess().getValueAbstractEntryValueParserRuleCall_6_0()); 
	    }
		lv_value_7_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryEntryRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_requiresCustomValidation_8_0=	'custom-validation' 
    {
        newLeafNode(lv_requiresCustomValidation_8_0, grammarAccess.getDictionaryEntryAccess().getRequiresCustomValidationCustomValidationKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed($current, "requiresCustomValidation", true, "custom-validation");
	    }

)
)?(
(
		lv_requiresCustomDefault_9_0=	'custom-default' 
    {
        newLeafNode(lv_requiresCustomDefault_9_0, grammarAccess.getDictionaryEntryAccess().getRequiresCustomDefaultCustomDefaultKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryEntryRule());
	        }
       		setWithLastConsumed($current, "requiresCustomDefault", true, "custom-default");
	    }

)
)?(	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDictionaryEntryAccess().getLeftParenthesisKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictionaryEntryAccess().getSinceSinceVersionEnumRuleCall_9_1_0()); 
	    }
		lv_since_11_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictionaryEntryRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_11_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDictionaryEntryAccess().getRightParenthesisKeyword_9_2());
    }
)?	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDictionaryEntryAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	 iv_rulePackageDeclaration=rulePackageDeclaration 
	 { $current=$iv_rulePackageDeclaration.current; } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsAbstractDeclarationParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=ruleAbstractDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"AbstractDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBitFlagsDeclaration
entryRuleBitFlagsDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBitFlagsDeclarationRule()); }
	 iv_ruleBitFlagsDeclaration=ruleBitFlagsDeclaration 
	 { $current=$iv_ruleBitFlagsDeclaration.current; } 
	 EOF 
;

// Rule BitFlagsDeclaration
ruleBitFlagsDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationAccess().getSpecificationReferenceSpecificationReferenceParserRuleCall_0_0()); 
	    }
		lv_specificationReference_0_0=ruleSpecificationReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationRule());
	        }
       		set(
       			$current, 
       			"specificationReference",
        		lv_specificationReference_0_0, 
        		"SpecificationReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='bit-flags' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBitFlagsDeclarationAccess().getBitFlagsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBitFlagsDeclarationAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0()); 
	    }
		lv_since_4_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_4_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBitFlagsDeclarationAccess().getRightParenthesisKeyword_3_2());
    }
)?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBitFlagsDeclarationAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationAccess().getDeclarationsBitFlagsDeclarationPartParserRuleCall_5_0()); 
	    }
		lv_declarations_7_0=ruleBitFlagsDeclarationPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_7_0, 
        		"BitFlagsDeclarationPart");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBitFlagsDeclarationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleBitFlagsDeclarationPart
entryRuleBitFlagsDeclarationPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBitFlagsDeclarationPartRule()); }
	 iv_ruleBitFlagsDeclarationPart=ruleBitFlagsDeclarationPart 
	 { $current=$iv_ruleBitFlagsDeclarationPart.current; } 
	 EOF 
;

// Rule BitFlagsDeclarationPart
ruleBitFlagsDeclarationPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_index_0_0=RULE_INT
		{
			newLeafNode(lv_index_0_0, grammarAccess.getBitFlagsDeclarationPartAccess().getIndexINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBitFlagsDeclarationPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_0_0, 
        		"INT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBitFlagsDeclarationPartAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationPartAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationPartRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBitFlagsDeclarationPartAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_3_1_0()); 
	    }
		lv_since_4_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitFlagsDeclarationPartRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_4_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBitFlagsDeclarationPartAccess().getRightParenthesisKeyword_3_2());
    }
)?	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBitFlagsDeclarationPartAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleNameEnumDeclaration
entryRuleNameEnumDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameEnumDeclarationRule()); }
	 iv_ruleNameEnumDeclaration=ruleNameEnumDeclaration 
	 { $current=$iv_ruleNameEnumDeclaration.current; } 
	 EOF 
;

// Rule NameEnumDeclaration
ruleNameEnumDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='name-enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNameEnumDeclarationAccess().getNameEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameEnumDeclarationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameEnumDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNameEnumDeclarationAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameEnumDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0()); 
	    }
		lv_since_3_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameEnumDeclarationRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_3_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNameEnumDeclarationAccess().getRightParenthesisKeyword_2_2());
    }
)?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNameEnumDeclarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameEnumDeclarationAccess().getDeclarationsNameEnumDeclarationPartParserRuleCall_4_0()); 
	    }
		lv_declarations_6_0=ruleNameEnumDeclarationPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameEnumDeclarationRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_6_0, 
        		"NameEnumDeclarationPart");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNameEnumDeclarationAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameEnumDeclarationAccess().getDeclarationsNameEnumDeclarationPartParserRuleCall_5_1_0()); 
	    }
		lv_declarations_8_0=ruleNameEnumDeclarationPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameEnumDeclarationRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_8_0, 
        		"NameEnumDeclarationPart");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNameEnumDeclarationAccess().getCommaKeyword_6());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNameEnumDeclarationAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleNameEnumDeclarationPart
entryRuleNameEnumDeclarationPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameEnumDeclarationPartRule()); }
	 iv_ruleNameEnumDeclarationPart=ruleNameEnumDeclarationPart 
	 { $current=$iv_ruleNameEnumDeclarationPart.current; } 
	 EOF 
;

// Rule NameEnumDeclarationPart
ruleNameEnumDeclarationPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_constant_0_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_constant_0_0, grammarAccess.getNameEnumDeclarationPartAccess().getConstantNAME_OBJECTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumDeclarationPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"constant",
        		lv_constant_0_0, 
        		"NAME_OBJECT");
	    }

)
)(	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNameEnumDeclarationPartAccess().getAsKeyword_1_0());
    }
(
(
		lv_alias_2_0=RULE_ID
		{
			newLeafNode(lv_alias_2_0, grammarAccess.getNameEnumDeclarationPartAccess().getAliasIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumDeclarationPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_2_0, 
        		"ID");
	    }

)
))?(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNameEnumDeclarationPartAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameEnumDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_2_1_0()); 
	    }
		lv_since_4_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameEnumDeclarationPartRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_4_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNameEnumDeclarationPartAccess().getRightParenthesisKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleAbstractEntryValue
entryRuleAbstractEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractEntryValueRule()); }
	 iv_ruleAbstractEntryValue=ruleAbstractEntryValue 
	 { $current=$iv_ruleAbstractEntryValue.current; } 
	 EOF 
;

// Rule AbstractEntryValue
ruleAbstractEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNullObjectEntryValueParserRuleCall_0()); 
    }
    this_NullObjectEntryValue_0=ruleNullObjectEntryValue
    { 
        $current = $this_NullObjectEntryValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNameTreeEntryValueParserRuleCall_1()); 
    }
    this_NameTreeEntryValue_1=ruleNameTreeEntryValue
    { 
        $current = $this_NameTreeEntryValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNumberTreeEntryValueParserRuleCall_2()); 
    }
    this_NumberTreeEntryValue_2=ruleNumberTreeEntryValue
    { 
        $current = $this_NumberTreeEntryValue_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNameObjectEntryValueParserRuleCall_3()); 
    }
    this_NameObjectEntryValue_3=ruleNameObjectEntryValue
    { 
        $current = $this_NameObjectEntryValue_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNumberObjectEntryValueParserRuleCall_4()); 
    }
    this_NumberObjectEntryValue_4=ruleNumberObjectEntryValue
    { 
        $current = $this_NumberObjectEntryValue_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getIntegerObjectEntryValueParserRuleCall_5()); 
    }
    this_IntegerObjectEntryValue_5=ruleIntegerObjectEntryValue
    { 
        $current = $this_IntegerObjectEntryValue_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getRealObjectEntryValueParserRuleCall_6()); 
    }
    this_RealObjectEntryValue_6=ruleRealObjectEntryValue
    { 
        $current = $this_RealObjectEntryValue_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getNameEnumEntryValueParserRuleCall_7()); 
    }
    this_NameEnumEntryValue_7=ruleNameEnumEntryValue
    { 
        $current = $this_NameEnumEntryValue_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getReferenceEntryValueParserRuleCall_8()); 
    }
    this_ReferenceEntryValue_8=ruleReferenceEntryValue
    { 
        $current = $this_ReferenceEntryValue_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getParentReferenceEntryValueParserRuleCall_9()); 
    }
    this_ParentReferenceEntryValue_9=ruleParentReferenceEntryValue
    { 
        $current = $this_ParentReferenceEntryValue_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getDictionaryDeclarationEntryValueParserRuleCall_10()); 
    }
    this_DictionaryDeclarationEntryValue_10=ruleDictionaryDeclarationEntryValue
    { 
        $current = $this_DictionaryDeclarationEntryValue_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getDictionaryObjectEntryValueParserRuleCall_11()); 
    }
    this_DictionaryObjectEntryValue_11=ruleDictionaryObjectEntryValue
    { 
        $current = $this_DictionaryObjectEntryValue_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getArrayEntryValueParserRuleCall_12()); 
    }
    this_ArrayEntryValue_12=ruleArrayEntryValue
    { 
        $current = $this_ArrayEntryValue_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getMappingDictEntryValueParserRuleCall_13()); 
    }
    this_MappingDictEntryValue_13=ruleMappingDictEntryValue
    { 
        $current = $this_MappingDictEntryValue_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getBooleanEntryValueParserRuleCall_14()); 
    }
    this_BooleanEntryValue_14=ruleBooleanEntryValue
    { 
        $current = $this_BooleanEntryValue_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getDateEntryValueParserRuleCall_15()); 
    }
    this_DateEntryValue_15=ruleDateEntryValue
    { 
        $current = $this_DateEntryValue_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getAlternativeEntryValueParserRuleCall_16()); 
    }
    this_AlternativeEntryValue_16=ruleAlternativeEntryValue
    { 
        $current = $this_AlternativeEntryValue_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getObjectEntryValueParserRuleCall_17()); 
    }
    this_ObjectEntryValue_17=ruleObjectEntryValue
    { 
        $current = $this_ObjectEntryValue_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getStringEntryValueParserRuleCall_18()); 
    }
    this_StringEntryValue_18=ruleStringEntryValue
    { 
        $current = $this_StringEntryValue_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getArrayMappedEntryValueParserRuleCall_19()); 
    }
    this_ArrayMappedEntryValue_19=ruleArrayMappedEntryValue
    { 
        $current = $this_ArrayMappedEntryValue_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractEntryValueAccess().getBitFlagsEntryValueParserRuleCall_20()); 
    }
    this_BitFlagsEntryValue_20=ruleBitFlagsEntryValue
    { 
        $current = $this_BitFlagsEntryValue_20.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNullObjectEntryValue
entryRuleNullObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullObjectEntryValueRule()); }
	 iv_ruleNullObjectEntryValue=ruleNullObjectEntryValue 
	 { $current=$iv_ruleNullObjectEntryValue.current; } 
	 EOF 
;

// Rule NullObjectEntryValue
ruleNullObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNullObjectEntryValueAccess().getNullObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNullObjectEntryValueAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleNameObjectEntryValue
entryRuleNameObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameObjectEntryValueRule()); }
	 iv_ruleNameObjectEntryValue=ruleNameObjectEntryValue 
	 { $current=$iv_ruleNameObjectEntryValue.current; } 
	 EOF 
;

// Rule NameObjectEntryValue
ruleNameObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNameObjectEntryValueAccess().getNameObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNameObjectEntryValueAccess().getNameKeyword_1());
    }
(((
(
		lv_hasMustBe_2_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_2_0, grammarAccess.getNameObjectEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		lv_requiredValue_3_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_requiredValue_3_0, grammarAccess.getNameObjectEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameObjectEntryValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_3_0, 
        		"NAME_OBJECT");
	    }

)
))
    |((
(
		lv_hasDefault_4_0=	'default' 
    {
        newLeafNode(lv_hasDefault_4_0, grammarAccess.getNameObjectEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		lv_defaultValue_5_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_defaultValue_5_0, grammarAccess.getNameObjectEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameObjectEntryValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_5_0, 
        		"NAME_OBJECT");
	    }

)
)))?)
;





// Entry rule entryRuleNumberObjectEntryValue
entryRuleNumberObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberObjectEntryValueRule()); }
	 iv_ruleNumberObjectEntryValue=ruleNumberObjectEntryValue 
	 { $current=$iv_ruleNumberObjectEntryValue.current; } 
	 EOF 
;

// Rule NumberObjectEntryValue
ruleNumberObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberObjectEntryValueAccess().getNumberObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='num' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumberObjectEntryValueAccess().getNumKeyword_1());
    }
(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumberObjectEntryValueAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberObjectEntryValueAccess().getRuleNumberValidationRuleParserRuleCall_2_1_0()); 
	    }
		lv_rule_3_0=ruleNumberValidationRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_3_0, 
        		"NumberValidationRule");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNumberObjectEntryValueAccess().getRightSquareBracketKeyword_2_2());
    }
)?(((
(
		lv_hasMustBe_5_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_5_0, grammarAccess.getNumberObjectEntryValueAccess().getHasMustBeMustBeKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberObjectEntryValueAccess().getRequiredValueNumberLiteralParserRuleCall_3_0_1_0()); 
	    }
		lv_requiredValue_6_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_6_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_hasDefault_7_0=	'default' 
    {
        newLeafNode(lv_hasDefault_7_0, grammarAccess.getNumberObjectEntryValueAccess().getHasDefaultDefaultKeyword_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberObjectEntryValueAccess().getDefaultValueNumberLiteralParserRuleCall_3_1_1_0()); 
	    }
		lv_defaultValue_8_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_8_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleNumberValidationRule
entryRuleNumberValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberValidationRuleRule()); }
	 iv_ruleNumberValidationRule=ruleNumberValidationRule 
	 { $current=$iv_ruleNumberValidationRule.current; } 
	 EOF 
;

// Rule NumberValidationRule
ruleNumberValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberValidationRuleAccess().getNumberInclusiveRangeValidationRuleParserRuleCall_0()); 
    }
    this_NumberInclusiveRangeValidationRule_0=ruleNumberInclusiveRangeValidationRule
    { 
        $current = $this_NumberInclusiveRangeValidationRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberValidationRuleAccess().getNumberGreaterValidationRuleParserRuleCall_1()); 
    }
    this_NumberGreaterValidationRule_1=ruleNumberGreaterValidationRule
    { 
        $current = $this_NumberGreaterValidationRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberValidationRuleAccess().getNumberGreaterEqualsValidationRuleParserRuleCall_2()); 
    }
    this_NumberGreaterEqualsValidationRule_2=ruleNumberGreaterEqualsValidationRule
    { 
        $current = $this_NumberGreaterEqualsValidationRule_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberValidationRuleAccess().getNumberValuesValidationRuleParserRuleCall_3()); 
    }
    this_NumberValuesValidationRule_3=ruleNumberValuesValidationRule
    { 
        $current = $this_NumberValuesValidationRule_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNumberInclusiveRangeValidationRule
entryRuleNumberInclusiveRangeValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberInclusiveRangeValidationRuleRule()); }
	 iv_ruleNumberInclusiveRangeValidationRule=ruleNumberInclusiveRangeValidationRule 
	 { $current=$iv_ruleNumberInclusiveRangeValidationRule.current; } 
	 EOF 
;

// Rule NumberInclusiveRangeValidationRule
ruleNumberInclusiveRangeValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='range-incl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getRangeInclKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getLowerBoundNumberLiteralParserRuleCall_1_0()); 
	    }
		lv_lowerBound_1_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberInclusiveRangeValidationRuleRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_1_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getUpperBoundNumberLiteralParserRuleCall_3_0()); 
	    }
		lv_upperBound_3_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberInclusiveRangeValidationRuleRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_3_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumberGreaterValidationRule
entryRuleNumberGreaterValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberGreaterValidationRuleRule()); }
	 iv_ruleNumberGreaterValidationRule=ruleNumberGreaterValidationRule 
	 { $current=$iv_ruleNumberGreaterValidationRule.current; } 
	 EOF 
;

// Rule NumberGreaterValidationRule
ruleNumberGreaterValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='greater' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberGreaterValidationRuleAccess().getGreaterKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberGreaterValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0()); 
	    }
		lv_minValue_1_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberGreaterValidationRuleRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_1_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumberGreaterEqualsValidationRule
entryRuleNumberGreaterEqualsValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberGreaterEqualsValidationRuleRule()); }
	 iv_ruleNumberGreaterEqualsValidationRule=ruleNumberGreaterEqualsValidationRule 
	 { $current=$iv_ruleNumberGreaterEqualsValidationRule.current; } 
	 EOF 
;

// Rule NumberGreaterEqualsValidationRule
ruleNumberGreaterEqualsValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='greater-equals' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getGreaterEqualsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0()); 
	    }
		lv_minValue_1_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberGreaterEqualsValidationRuleRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_1_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumberValuesValidationRule
entryRuleNumberValuesValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberValuesValidationRuleRule()); }
	 iv_ruleNumberValuesValidationRule=ruleNumberValuesValidationRule 
	 { $current=$iv_ruleNumberValuesValidationRule.current; } 
	 EOF 
;

// Rule NumberValuesValidationRule
ruleNumberValuesValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='values' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberValuesValidationRuleAccess().getValuesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberValuesValidationRuleAccess().getValueNumberValuesValidationRuleEntryParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumberValuesValidationRuleEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberValuesValidationRuleRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"NumberValuesValidationRuleEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumberValuesValidationRuleAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberValuesValidationRuleAccess().getValueNumberValuesValidationRuleEntryParserRuleCall_2_1_0()); 
	    }
		lv_value_3_0=ruleNumberValuesValidationRuleEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberValuesValidationRuleRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"NumberValuesValidationRuleEntry");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNumberValuesValidationRuleEntry
entryRuleNumberValuesValidationRuleEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberValuesValidationRuleEntryRule()); }
	 iv_ruleNumberValuesValidationRuleEntry=ruleNumberValuesValidationRuleEntry 
	 { $current=$iv_ruleNumberValuesValidationRuleEntry.current; } 
	 EOF 
;

// Rule NumberValuesValidationRuleEntry
ruleNumberValuesValidationRuleEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumberValuesValidationRuleEntryAccess().getValueNumberLiteralParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberValuesValidationRuleEntryRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumberValuesValidationRuleEntryAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0()); 
	    }
		lv_since_2_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberValuesValidationRuleEntryRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_2_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumberValuesValidationRuleEntryAccess().getRightParenthesisKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleIntegerObjectEntryValue
entryRuleIntegerObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerObjectEntryValueRule()); }
	 iv_ruleIntegerObjectEntryValue=ruleIntegerObjectEntryValue 
	 { $current=$iv_ruleIntegerObjectEntryValue.current; } 
	 EOF 
;

// Rule IntegerObjectEntryValue
ruleIntegerObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerObjectEntryValueAccess().getIntegerObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='int' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerObjectEntryValueAccess().getIntKeyword_1());
    }
(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerObjectEntryValueAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerObjectEntryValueAccess().getRuleIntegerValidationRuleParserRuleCall_2_1_0()); 
	    }
		lv_rule_3_0=ruleIntegerValidationRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_3_0, 
        		"IntegerValidationRule");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegerObjectEntryValueAccess().getRightSquareBracketKeyword_2_2());
    }
)?(((
(
		lv_hasMustBe_5_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_5_0, grammarAccess.getIntegerObjectEntryValueAccess().getHasMustBeMustBeKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerObjectEntryValueAccess().getRequiredValueIntLiteralParserRuleCall_3_0_1_0()); 
	    }
		lv_requiredValue_6_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_6_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_hasDefault_7_0=	'default' 
    {
        newLeafNode(lv_hasDefault_7_0, grammarAccess.getIntegerObjectEntryValueAccess().getHasDefaultDefaultKeyword_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerObjectEntryValueAccess().getDefaultValueIntLiteralParserRuleCall_3_1_1_0()); 
	    }
		lv_defaultValue_8_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_8_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleIntegerValidationRule
entryRuleIntegerValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValidationRuleRule()); }
	 iv_ruleIntegerValidationRule=ruleIntegerValidationRule 
	 { $current=$iv_ruleIntegerValidationRule.current; } 
	 EOF 
;

// Rule IntegerValidationRule
ruleIntegerValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerValidationRuleAccess().getIntegerInclusiveRangeValidationRuleParserRuleCall_0()); 
    }
    this_IntegerInclusiveRangeValidationRule_0=ruleIntegerInclusiveRangeValidationRule
    { 
        $current = $this_IntegerInclusiveRangeValidationRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerValidationRuleAccess().getIntegerValuesValidationRuleParserRuleCall_1()); 
    }
    this_IntegerValuesValidationRule_1=ruleIntegerValuesValidationRule
    { 
        $current = $this_IntegerValuesValidationRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerValidationRuleAccess().getIntegerGreaterValidationRuleParserRuleCall_2()); 
    }
    this_IntegerGreaterValidationRule_2=ruleIntegerGreaterValidationRule
    { 
        $current = $this_IntegerGreaterValidationRule_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerValidationRuleAccess().getIntegerGreaterEqualsValidationRuleParserRuleCall_3()); 
    }
    this_IntegerGreaterEqualsValidationRule_3=ruleIntegerGreaterEqualsValidationRule
    { 
        $current = $this_IntegerGreaterEqualsValidationRule_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntegerInclusiveRangeValidationRule
entryRuleIntegerInclusiveRangeValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerInclusiveRangeValidationRuleRule()); }
	 iv_ruleIntegerInclusiveRangeValidationRule=ruleIntegerInclusiveRangeValidationRule 
	 { $current=$iv_ruleIntegerInclusiveRangeValidationRule.current; } 
	 EOF 
;

// Rule IntegerInclusiveRangeValidationRule
ruleIntegerInclusiveRangeValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='range-incl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getRangeInclKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getLowerBoundIntLiteralParserRuleCall_1_0()); 
	    }
		lv_lowerBound_1_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerInclusiveRangeValidationRuleRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_1_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getUpperBoundIntLiteralParserRuleCall_3_0()); 
	    }
		lv_upperBound_3_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerInclusiveRangeValidationRuleRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_3_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerValuesValidationRule
entryRuleIntegerValuesValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValuesValidationRuleRule()); }
	 iv_ruleIntegerValuesValidationRule=ruleIntegerValuesValidationRule 
	 { $current=$iv_ruleIntegerValuesValidationRule.current; } 
	 EOF 
;

// Rule IntegerValuesValidationRule
ruleIntegerValuesValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='values' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerValuesValidationRuleAccess().getValuesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValuesValidationRuleAccess().getValueIntegerValuesValidationRuleEntryParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleIntegerValuesValidationRuleEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValuesValidationRuleRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"IntegerValuesValidationRuleEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerValuesValidationRuleAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValuesValidationRuleAccess().getValueIntegerValuesValidationRuleEntryParserRuleCall_2_1_0()); 
	    }
		lv_value_3_0=ruleIntegerValuesValidationRuleEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValuesValidationRuleRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"IntegerValuesValidationRuleEntry");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIntegerGreaterValidationRule
entryRuleIntegerGreaterValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerGreaterValidationRuleRule()); }
	 iv_ruleIntegerGreaterValidationRule=ruleIntegerGreaterValidationRule 
	 { $current=$iv_ruleIntegerGreaterValidationRule.current; } 
	 EOF 
;

// Rule IntegerGreaterValidationRule
ruleIntegerGreaterValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='greater' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerGreaterValidationRuleAccess().getGreaterKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerGreaterValidationRuleAccess().getMinValueIntLiteralParserRuleCall_1_0()); 
	    }
		lv_minValue_1_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerGreaterValidationRuleRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_1_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerGreaterEqualsValidationRule
entryRuleIntegerGreaterEqualsValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerGreaterEqualsValidationRuleRule()); }
	 iv_ruleIntegerGreaterEqualsValidationRule=ruleIntegerGreaterEqualsValidationRule 
	 { $current=$iv_ruleIntegerGreaterEqualsValidationRule.current; } 
	 EOF 
;

// Rule IntegerGreaterEqualsValidationRule
ruleIntegerGreaterEqualsValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='greater-equals' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getGreaterEqualsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0()); 
	    }
		lv_minValue_1_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerGreaterEqualsValidationRuleRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_1_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerValuesValidationRuleEntry
entryRuleIntegerValuesValidationRuleEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValuesValidationRuleEntryRule()); }
	 iv_ruleIntegerValuesValidationRuleEntry=ruleIntegerValuesValidationRuleEntry 
	 { $current=$iv_ruleIntegerValuesValidationRuleEntry.current; } 
	 EOF 
;

// Rule IntegerValuesValidationRuleEntry
ruleIntegerValuesValidationRuleEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValuesValidationRuleEntryAccess().getValueIntLiteralParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValuesValidationRuleEntryRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerValuesValidationRuleEntryAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0()); 
	    }
		lv_since_2_0=ruleSinceVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValuesValidationRuleEntryRule());
	        }
       		set(
       			$current, 
       			"since",
        		lv_since_2_0, 
        		"SinceVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerValuesValidationRuleEntryAccess().getRightParenthesisKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleRealObjectEntryValue
entryRuleRealObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealObjectEntryValueRule()); }
	 iv_ruleRealObjectEntryValue=ruleRealObjectEntryValue 
	 { $current=$iv_ruleRealObjectEntryValue.current; } 
	 EOF 
;

// Rule RealObjectEntryValue
ruleRealObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getRealObjectEntryValueAccess().getRealObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='real' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealObjectEntryValueAccess().getRealKeyword_1());
    }
(((
(
		lv_hasMustBe_2_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_2_0, grammarAccess.getRealObjectEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRealObjectEntryValueAccess().getRequiredValueRealLiteralParserRuleCall_2_0_1_0()); 
	    }
		lv_requiredValue_3_0=ruleRealLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_3_0, 
        		"RealLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_hasDefault_4_0=	'default' 
    {
        newLeafNode(lv_hasDefault_4_0, grammarAccess.getRealObjectEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealObjectEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRealObjectEntryValueAccess().getDefaultValueRealLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_defaultValue_5_0=ruleRealLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealObjectEntryValueRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_5_0, 
        		"RealLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleNameTreeEntryValue
entryRuleNameTreeEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameTreeEntryValueRule()); }
	 iv_ruleNameTreeEntryValue=ruleNameTreeEntryValue 
	 { $current=$iv_ruleNameTreeEntryValue.current; } 
	 EOF 
;

// Rule NameTreeEntryValue
ruleNameTreeEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNameTreeEntryValueAccess().getNameTreeEntryValueAction_0(),
            $current);
    }
)	otherlv_1='name-tree' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNameTreeEntryValueAccess().getNameTreeKeyword_1());
    }
)
;





// Entry rule entryRuleNumberTreeEntryValue
entryRuleNumberTreeEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberTreeEntryValueRule()); }
	 iv_ruleNumberTreeEntryValue=ruleNumberTreeEntryValue 
	 { $current=$iv_ruleNumberTreeEntryValue.current; } 
	 EOF 
;

// Rule NumberTreeEntryValue
ruleNumberTreeEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeEntryValueAction_0(),
            $current);
    }
)	otherlv_1='number-tree' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeKeyword_1());
    }
)
;





// Entry rule entryRuleArrayEntryValue
entryRuleArrayEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayEntryValueRule()); }
	 iv_ruleArrayEntryValue=ruleArrayEntryValue 
	 { $current=$iv_ruleArrayEntryValue.current; } 
	 EOF 
;

// Rule ArrayEntryValue
ruleArrayEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='array' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayEntryValueAccess().getArrayKeyword_0());
    }
(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayEntryValueAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayEntryValueAccess().getRuleArrayValidationRuleParserRuleCall_1_1_0()); 
	    }
		lv_rule_2_0=ruleArrayValidationRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayEntryValueRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_2_0, 
        		"ArrayValidationRule");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayEntryValueAccess().getRightSquareBracketKeyword_1_2());
    }
)?	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrayEntryValueAccess().getLessThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayEntryValueAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_3_0()); 
	    }
		lv_indirectReference_5_0=ruleIndirectReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayEntryValueRule());
	        }
       		set(
       			$current, 
       			"indirectReference",
        		lv_indirectReference_5_0, 
        		"IndirectReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayEntryValueAccess().getTypeAbstractEntryValueParserRuleCall_4_0()); 
	    }
		lv_type_6_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayEntryValueRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_requiresCustomValidation_7_0=	'custom-validation' 
    {
        newLeafNode(lv_requiresCustomValidation_7_0, grammarAccess.getArrayEntryValueAccess().getRequiresCustomValidationCustomValidationKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayEntryValueRule());
	        }
       		setWithLastConsumed($current, "requiresCustomValidation", true, "custom-validation");
	    }

)
)?(
(
		lv_requiresCustomDefault_8_0=	'custom-default' 
    {
        newLeafNode(lv_requiresCustomDefault_8_0, grammarAccess.getArrayEntryValueAccess().getRequiresCustomDefaultCustomDefaultKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayEntryValueRule());
	        }
       		setWithLastConsumed($current, "requiresCustomDefault", true, "custom-default");
	    }

)
)?	otherlv_9='>' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArrayEntryValueAccess().getGreaterThanSignKeyword_7());
    }
)
;





// Entry rule entryRuleArrayValidationRule
entryRuleArrayValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayValidationRuleRule()); }
	 iv_ruleArrayValidationRule=ruleArrayValidationRule 
	 { $current=$iv_ruleArrayValidationRule.current; } 
	 EOF 
;

// Rule ArrayValidationRule
ruleArrayValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArrayValidationRuleAccess().getArrayLengthValidationRuleParserRuleCall()); 
    }
    this_ArrayLengthValidationRule_0=ruleArrayLengthValidationRule
    { 
        $current = $this_ArrayLengthValidationRule_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleArrayLengthValidationRule
entryRuleArrayLengthValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayLengthValidationRuleRule()); }
	 iv_ruleArrayLengthValidationRule=ruleArrayLengthValidationRule 
	 { $current=$iv_ruleArrayLengthValidationRule.current; } 
	 EOF 
;

// Rule ArrayLengthValidationRule
ruleArrayLengthValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='length' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayLengthValidationRuleAccess().getLengthKeyword_0());
    }
(
(
		lv_length_1_0=RULE_INT
		{
			newLeafNode(lv_length_1_0, grammarAccess.getArrayLengthValidationRuleAccess().getLengthINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayLengthValidationRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleObjectEntryValue
entryRuleObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectEntryValueRule()); }
	 iv_ruleObjectEntryValue=ruleObjectEntryValue 
	 { $current=$iv_ruleObjectEntryValue.current; } 
	 EOF 
;

// Rule ObjectEntryValue
ruleObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='object' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectEntryValueAccess().getObjectKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getObjectEntryValueAccess().getObjectEntryValueAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleMappingDictEntryValue
entryRuleMappingDictEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingDictEntryValueRule()); }
	 iv_ruleMappingDictEntryValue=ruleMappingDictEntryValue 
	 { $current=$iv_ruleMappingDictEntryValue.current; } 
	 EOF 
;

// Rule MappingDictEntryValue
ruleMappingDictEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mapping-dict' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingDictEntryValueAccess().getMappingDictKeyword_0());
    }
	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMappingDictEntryValueAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingDictEntryValueAccess().getTypeAbstractEntryValueParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingDictEntryValueRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_requiresCustomValidation_3_0=	'custom-validation' 
    {
        newLeafNode(lv_requiresCustomValidation_3_0, grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomValidationCustomValidationKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingDictEntryValueRule());
	        }
       		setWithLastConsumed($current, "requiresCustomValidation", true, "custom-validation");
	    }

)
)?(
(
		lv_requiresCustomDefault_4_0=	'custom-default' 
    {
        newLeafNode(lv_requiresCustomDefault_4_0, grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomDefaultCustomDefaultKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingDictEntryValueRule());
	        }
       		setWithLastConsumed($current, "requiresCustomDefault", true, "custom-default");
	    }

)
)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMappingDictEntryValueAccess().getGreaterThanSignKeyword_5());
    }
)
;





// Entry rule entryRuleStringEntryValue
entryRuleStringEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringEntryValueRule()); }
	 iv_ruleStringEntryValue=ruleStringEntryValue 
	 { $current=$iv_ruleStringEntryValue.current; } 
	 EOF 
;

// Rule StringEntryValue
ruleStringEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_textString_0_0=	'text-string' 
    {
        newLeafNode(lv_textString_0_0, grammarAccess.getStringEntryValueAccess().getTextStringTextStringKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringEntryValueRule());
	        }
       		setWithLastConsumed($current, "textString", true, "text-string");
	    }

)
)
    |(
(
		lv_asciiString_1_0=	'ascii-string' 
    {
        newLeafNode(lv_asciiString_1_0, grammarAccess.getStringEntryValueAccess().getAsciiStringAsciiStringKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringEntryValueRule());
	        }
       		setWithLastConsumed($current, "asciiString", true, "ascii-string");
	    }

)
)
    |(
(
		lv_byteString_2_0=	'byte-string' 
    {
        newLeafNode(lv_byteString_2_0, grammarAccess.getStringEntryValueAccess().getByteStringByteStringKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringEntryValueRule());
	        }
       		setWithLastConsumed($current, "byteString", true, "byte-string");
	    }

)
))(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringEntryValueAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringEntryValueAccess().getRuleStringValidationRuleParserRuleCall_1_1_0()); 
	    }
		lv_rule_4_0=ruleStringValidationRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringEntryValueRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_4_0, 
        		"StringValidationRule");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringEntryValueAccess().getRightSquareBracketKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleStringValidationRule
entryRuleStringValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringValidationRuleRule()); }
	 iv_ruleStringValidationRule=ruleStringValidationRule 
	 { $current=$iv_ruleStringValidationRule.current; } 
	 EOF 
;

// Rule StringValidationRule
ruleStringValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStringValidationRuleAccess().getStringLengthValidationRuleParserRuleCall()); 
    }
    this_StringLengthValidationRule_0=ruleStringLengthValidationRule
    { 
        $current = $this_StringLengthValidationRule_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleStringLengthValidationRule
entryRuleStringLengthValidationRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLengthValidationRuleRule()); }
	 iv_ruleStringLengthValidationRule=ruleStringLengthValidationRule 
	 { $current=$iv_ruleStringLengthValidationRule.current; } 
	 EOF 
;

// Rule StringLengthValidationRule
ruleStringLengthValidationRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='length' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringLengthValidationRuleAccess().getLengthKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringLengthValidationRuleAccess().getLengthIntLiteralParserRuleCall_1_0()); 
	    }
		lv_length_1_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringLengthValidationRuleRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_1_0, 
        		"IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAlternativeEntryValue
entryRuleAlternativeEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeEntryValueRule()); }
	 iv_ruleAlternativeEntryValue=ruleAlternativeEntryValue 
	 { $current=$iv_ruleAlternativeEntryValue.current; } 
	 EOF 
;

// Rule AlternativeEntryValue
ruleAlternativeEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlternativeEntryValueAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeEntryValueAccess().getOptionsAbstractEntryValueParserRuleCall_1_0()); 
	    }
		lv_options_1_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeEntryValueRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlternativeEntryValueAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeEntryValueAccess().getOptionsAbstractEntryValueParserRuleCall_2_1_0()); 
	    }
		lv_options_3_0=ruleAbstractEntryValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeEntryValueRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_3_0, 
        		"AbstractEntryValue");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlternativeEntryValueAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleBooleanEntryValue
entryRuleBooleanEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanEntryValueRule()); }
	 iv_ruleBooleanEntryValue=ruleBooleanEntryValue 
	 { $current=$iv_ruleBooleanEntryValue.current; } 
	 EOF 
;

// Rule BooleanEntryValue
ruleBooleanEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bool' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanEntryValueAccess().getBoolKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanEntryValueAccess().getBooleanEntryValueAction_1(),
            $current);
    }
)(((
(
		lv_hasMustBe_2_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_2_0, grammarAccess.getBooleanEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanEntryValueAccess().getRequiredValueBoolEnumRuleCall_2_0_1_0()); 
	    }
		lv_requiredValue_3_0=ruleBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanEntryValueRule());
	        }
       		set(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_3_0, 
        		"Bool");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_hasDefault_4_0=	'default' 
    {
        newLeafNode(lv_hasDefault_4_0, grammarAccess.getBooleanEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanEntryValueAccess().getDefaultValueBoolEnumRuleCall_2_1_1_0()); 
	    }
		lv_defaultValue_5_0=ruleBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanEntryValueRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_5_0, 
        		"Bool");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleReferenceEntryValue
entryRuleReferenceEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceEntryValueRule()); }
	 iv_ruleReferenceEntryValue=ruleReferenceEntryValue 
	 { $current=$iv_ruleReferenceEntryValue.current; } 
	 EOF 
;

// Rule ReferenceEntryValue
ruleReferenceEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceEntryValueAccess().getRefKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceEntryValueAccess().getReferenceEntryValueAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleParentReferenceEntryValue
entryRuleParentReferenceEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParentReferenceEntryValueRule()); }
	 iv_ruleParentReferenceEntryValue=ruleParentReferenceEntryValue 
	 { $current=$iv_ruleParentReferenceEntryValue.current; } 
	 EOF 
;

// Rule ParentReferenceEntryValue
ruleParentReferenceEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='parent-ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParentReferenceEntryValueAccess().getParentRefKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParentReferenceEntryValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParentReferenceEntryValueAccess().getParentTypeDictionaryDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDictionaryObjectEntryValue
entryRuleDictionaryObjectEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictionaryObjectEntryValueRule()); }
	 iv_ruleDictionaryObjectEntryValue=ruleDictionaryObjectEntryValue 
	 { $current=$iv_ruleDictionaryObjectEntryValue.current; } 
	 EOF 
;

// Rule DictionaryObjectEntryValue
ruleDictionaryObjectEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDictionaryObjectEntryValueAccess().getDictionaryObjectEntryValueAction_0(),
            $current);
    }
)	otherlv_1='dict' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDictionaryObjectEntryValueAccess().getDictKeyword_1());
    }
)
;





// Entry rule entryRuleDictionaryDeclarationEntryValue
entryRuleDictionaryDeclarationEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictionaryDeclarationEntryValueRule()); }
	 iv_ruleDictionaryDeclarationEntryValue=ruleDictionaryDeclarationEntryValue 
	 { $current=$iv_ruleDictionaryDeclarationEntryValue.current; } 
	 EOF 
;

// Rule DictionaryDeclarationEntryValue
ruleDictionaryDeclarationEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dict-obj' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDictionaryDeclarationEntryValueAccess().getDictObjKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDictionaryDeclarationEntryValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDictionaryDeclarationEntryValueAccess().getTargetDictionaryDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArrayMappedEntryValue
entryRuleArrayMappedEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayMappedEntryValueRule()); }
	 iv_ruleArrayMappedEntryValue=ruleArrayMappedEntryValue 
	 { $current=$iv_ruleArrayMappedEntryValue.current; } 
	 EOF 
;

// Rule ArrayMappedEntryValue
ruleArrayMappedEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='array-mapped' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayMappedEntryValueAccess().getArrayMappedKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayMappedEntryValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getArrayMappedEntryValueAccess().getTargetArrayMappedDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBitFlagsEntryValue
entryRuleBitFlagsEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBitFlagsEntryValueRule()); }
	 iv_ruleBitFlagsEntryValue=ruleBitFlagsEntryValue 
	 { $current=$iv_ruleBitFlagsEntryValue.current; } 
	 EOF 
;

// Rule BitFlagsEntryValue
ruleBitFlagsEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bit-flags' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBitFlagsEntryValueAccess().getBitFlagsKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBitFlagsEntryValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBitFlagsEntryValueAccess().getTargetBitFlagsDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDateEntryValue
entryRuleDateEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateEntryValueRule()); }
	 iv_ruleDateEntryValue=ruleDateEntryValue 
	 { $current=$iv_ruleDateEntryValue.current; } 
	 EOF 
;

// Rule DateEntryValue
ruleDateEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDateEntryValueAccess().getDateEntryValueAction_0(),
            $current);
    }
)	otherlv_1='date' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateEntryValueAccess().getDateKeyword_1());
    }
)
;





// Entry rule entryRuleNameEnumEntryValue
entryRuleNameEnumEntryValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameEnumEntryValueRule()); }
	 iv_ruleNameEnumEntryValue=ruleNameEnumEntryValue 
	 { $current=$iv_ruleNameEnumEntryValue.current; } 
	 EOF 
;

// Rule NameEnumEntryValue
ruleNameEnumEntryValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='name-enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNameEnumEntryValueAccess().getNameEnumKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumEntryValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNameEnumEntryValueAccess().getTargetNameEnumDeclarationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_hasMustBe_2_0=	'must-be' 
    {
        newLeafNode(lv_hasMustBe_2_0, grammarAccess.getNameEnumEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasMustBe", true, "must-be");
	    }

)
)(
(
		lv_requiredValue_3_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_requiredValue_3_0, grammarAccess.getNameEnumEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumEntryValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"requiredValue",
        		lv_requiredValue_3_0, 
        		"NAME_OBJECT");
	    }

)
))
    |((
(
		lv_hasDefault_4_0=	'default' 
    {
        newLeafNode(lv_hasDefault_4_0, grammarAccess.getNameEnumEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumEntryValueRule());
	        }
       		setWithLastConsumed($current, "hasDefault", true, "default");
	    }

)
)(
(
		lv_defaultValue_5_0=RULE_NAME_OBJECT
		{
			newLeafNode(lv_defaultValue_5_0, grammarAccess.getNameEnumEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameEnumEntryValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_5_0, 
        		"NAME_OBJECT");
	    }

)
)))?)
;





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current; } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberLiteralAccess().getIntLiteralParserRuleCall_0()); 
    }
    this_IntLiteral_0=ruleIntLiteral
    { 
        $current = $this_IntLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumberLiteralAccess().getRealLiteralParserRuleCall_1()); 
    }
    this_RealLiteral_1=ruleRealLiteral
    { 
        $current = $this_RealLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	 iv_ruleIntLiteral=ruleIntLiteral 
	 { $current=$iv_ruleIntLiteral.current; } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;





// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	 iv_ruleRealLiteral=ruleRealLiteral 
	 { $current=$iv_ruleRealLiteral.current; } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_0_0, grammarAccess.getRealLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"DOUBLE");
	    }

)
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





// Rule IndirectReference
ruleIndirectReference returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='UNDEFINED' 
	{
        $current = grammarAccess.getIndirectReferenceAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getIndirectReferenceAccess().getUNDEFINEDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='indirect-shall' 
	{
        $current = grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHALLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHALLEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='indirect-shall-not' 
	{
        $current = grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHALL_NOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHALL_NOTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='indirect-should' 
	{
        $current = grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHOULDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getIndirectReferenceAccess().getINDIRECT_SHOULDEnumLiteralDeclaration_3()); 
    }
));



// Rule SinceVersion
ruleSinceVersion returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='UNDEFINED' 
	{
        $current = grammarAccess.getSinceVersionAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSinceVersionAccess().getUNDEFINEDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='pdf-1.0' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_10EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSinceVersionAccess().getPDF_10EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='pdf-1.1' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_11EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSinceVersionAccess().getPDF_11EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='pdf-1.2' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_12EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSinceVersionAccess().getPDF_12EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='pdf-1.3' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_13EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSinceVersionAccess().getPDF_13EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='pdf-1.4' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_14EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getSinceVersionAccess().getPDF_14EnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='pdf-1.5' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_15EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getSinceVersionAccess().getPDF_15EnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='pdf-1.6' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_16EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getSinceVersionAccess().getPDF_16EnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='pdf-1.7' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_17EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getSinceVersionAccess().getPDF_17EnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='32000-1' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_32000_1EnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getSinceVersionAccess().getPDF_32000_1EnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='pdf-2.0' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_20EnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getSinceVersionAccess().getPDF_20EnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='32000-2' 
	{
        $current = grammarAccess.getSinceVersionAccess().getPDF_32000_2EnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getSinceVersionAccess().getPDF_32000_2EnumLiteralDeclaration_11()); 
    }
));



// Rule Bool
ruleBool returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='true' 
	{
        $current = grammarAccess.getBoolAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBoolAccess().getTRUEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='false' 
	{
        $current = grammarAccess.getBoolAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBoolAccess().getFALSEEnumLiteralDeclaration_1()); 
    }
));



RULE_NAME_OBJECT : '/' ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'#' '0'..'9' '0'..'9')+;

RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


