/*
* generated by Xtext
*/
package com.levigo.jadice.tools.pdf.modelgen.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import com.levigo.jadice.tools.pdf.modelgen.services.PDFModelGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class PDFModelParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private PDFModelGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PDFModel_PackagesAssignment(this, this, 0, inst);
			case 1: return new AbstractDeclaration_Alternatives(this, this, 1, inst);
			case 2: return new SpecificationReference_Group(this, this, 2, inst);
			case 3: return new SectionReference_Group(this, this, 3, inst);
			case 4: return new ArrayMappedDeclaration_Group(this, this, 4, inst);
			case 5: return new AbstractEntry_Alternatives(this, this, 5, inst);
			case 6: return new ArrayMappedEntry_Group(this, this, 6, inst);
			case 7: return new DictionaryDeclaration_Group(this, this, 7, inst);
			case 8: return new SubtypeConfig_Group(this, this, 8, inst);
			case 9: return new DictionaryEntry_Group(this, this, 9, inst);
			case 10: return new PackageDeclaration_Group(this, this, 10, inst);
			case 11: return new BitFlagsDeclaration_Group(this, this, 11, inst);
			case 12: return new BitFlagsDeclarationPart_Group(this, this, 12, inst);
			case 13: return new NameEnumDeclaration_Group(this, this, 13, inst);
			case 14: return new NameEnumDeclarationPart_Group(this, this, 14, inst);
			case 15: return new AbstractEntryValue_Alternatives(this, this, 15, inst);
			case 16: return new NullObjectEntryValue_Group(this, this, 16, inst);
			case 17: return new NameObjectEntryValue_Group(this, this, 17, inst);
			case 18: return new NumberObjectEntryValue_Group(this, this, 18, inst);
			case 19: return new NumberValidationRule_Alternatives(this, this, 19, inst);
			case 20: return new NumberInclusiveRangeValidationRule_Group(this, this, 20, inst);
			case 21: return new NumberGreaterValidationRule_Group(this, this, 21, inst);
			case 22: return new NumberGreaterEqualsValidationRule_Group(this, this, 22, inst);
			case 23: return new NumberValuesValidationRule_Group(this, this, 23, inst);
			case 24: return new NumberValuesValidationRuleEntry_Group(this, this, 24, inst);
			case 25: return new IntegerObjectEntryValue_Group(this, this, 25, inst);
			case 26: return new IntegerValidationRule_Alternatives(this, this, 26, inst);
			case 27: return new IntegerInclusiveRangeValidationRule_Group(this, this, 27, inst);
			case 28: return new IntegerValuesValidationRule_Group(this, this, 28, inst);
			case 29: return new IntegerGreaterValidationRule_Group(this, this, 29, inst);
			case 30: return new IntegerGreaterEqualsValidationRule_Group(this, this, 30, inst);
			case 31: return new IntegerValuesValidationRuleEntry_Group(this, this, 31, inst);
			case 32: return new RealObjectEntryValue_Group(this, this, 32, inst);
			case 33: return new NameTreeEntryValue_Group(this, this, 33, inst);
			case 34: return new NumberTreeEntryValue_Group(this, this, 34, inst);
			case 35: return new ArrayEntryValue_Group(this, this, 35, inst);
			case 36: return new ArrayValidationRule_ArrayLengthValidationRuleParserRuleCall(this, this, 36, inst);
			case 37: return new ArrayLengthValidationRule_Group(this, this, 37, inst);
			case 38: return new ObjectEntryValue_Group(this, this, 38, inst);
			case 39: return new MappingDictEntryValue_Group(this, this, 39, inst);
			case 40: return new StringEntryValue_Group(this, this, 40, inst);
			case 41: return new StringValidationRule_StringLengthValidationRuleParserRuleCall(this, this, 41, inst);
			case 42: return new StringLengthValidationRule_Group(this, this, 42, inst);
			case 43: return new AlternativeEntryValue_Group(this, this, 43, inst);
			case 44: return new BooleanEntryValue_Group(this, this, 44, inst);
			case 45: return new ReferenceEntryValue_Group(this, this, 45, inst);
			case 46: return new ParentReferenceEntryValue_Group(this, this, 46, inst);
			case 47: return new DictionaryObjectEntryValue_Group(this, this, 47, inst);
			case 48: return new DictionaryDeclarationEntryValue_Group(this, this, 48, inst);
			case 49: return new ArrayMappedEntryValue_Group(this, this, 49, inst);
			case 50: return new BitFlagsEntryValue_Group(this, this, 50, inst);
			case 51: return new DateEntryValue_Group(this, this, 51, inst);
			case 52: return new NameEnumEntryValue_Group(this, this, 52, inst);
			case 53: return new NumberLiteral_Alternatives(this, this, 53, inst);
			case 54: return new IntLiteral_ValueAssignment(this, this, 54, inst);
			case 55: return new RealLiteral_ValueAssignment(this, this, 55, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule PDFModel ****************
 *
 * PDFModel:
 * 	packages+=PackageDeclaration+;
 *
 **/

// packages+=PackageDeclaration+
protected class PDFModel_PackagesAssignment extends AssignmentToken  {
	
	public PDFModel_PackagesAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPDFModelAccess().getPackagesAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("packages",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("packages");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageDeclarationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPDFModelAccess().getPackagesPackageDeclarationParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PDFModel_PackagesAssignment(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

/************ end Rule PDFModel ****************/


/************ begin Rule AbstractDeclaration ****************
 *
 * AbstractDeclaration:
 * 	DictionaryDeclaration | NameEnumDeclaration | ArrayMappedDeclaration | BitFlagsDeclaration;
 *
 **/

// DictionaryDeclaration | NameEnumDeclaration | ArrayMappedDeclaration | BitFlagsDeclaration
protected class AbstractDeclaration_Alternatives extends AlternativesToken {

	public AbstractDeclaration_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractDeclarationAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractDeclaration_DictionaryDeclarationParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractDeclaration_NameEnumDeclarationParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractDeclaration_ArrayMappedDeclarationParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractDeclaration_BitFlagsDeclarationParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedDeclarationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBitFlagsDeclarationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDictionaryDeclarationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNameEnumDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// DictionaryDeclaration
protected class AbstractDeclaration_DictionaryDeclarationParserRuleCall_0 extends RuleCallToken {
	
	public AbstractDeclaration_DictionaryDeclarationParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractDeclarationAccess().getDictionaryDeclarationParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryDeclarationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DictionaryDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NameEnumDeclaration
protected class AbstractDeclaration_NameEnumDeclarationParserRuleCall_1 extends RuleCallToken {
	
	public AbstractDeclaration_NameEnumDeclarationParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractDeclarationAccess().getNameEnumDeclarationParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameEnumDeclarationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NameEnumDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ArrayMappedDeclaration
protected class AbstractDeclaration_ArrayMappedDeclarationParserRuleCall_2 extends RuleCallToken {
	
	public AbstractDeclaration_ArrayMappedDeclarationParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractDeclarationAccess().getArrayMappedDeclarationParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedDeclarationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ArrayMappedDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// BitFlagsDeclaration
protected class AbstractDeclaration_BitFlagsDeclarationParserRuleCall_3 extends RuleCallToken {
	
	public AbstractDeclaration_BitFlagsDeclarationParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractDeclarationAccess().getBitFlagsDeclarationParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitFlagsDeclarationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BitFlagsDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule AbstractDeclaration ****************/


/************ begin Rule SpecificationReference ****************
 *
 * SpecificationReference:
 * 	"@spec-ref" "ISO32000-1:2008" "," section=SectionReference ("," "table" table=INT)?;
 *
 **/

// "@spec-ref" "ISO32000-1:2008" "," section=SectionReference ("," "table" table=INT)?
protected class SpecificationReference_Group extends GroupToken {
	
	public SpecificationReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SpecificationReference_SectionAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpecificationReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@spec-ref"
protected class SpecificationReference_SpecRefKeyword_0 extends KeywordToken  {
	
	public SpecificationReference_SpecRefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getSpecRefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "ISO32000-1:2008"
protected class SpecificationReference_ISO3200012008Keyword_1 extends KeywordToken  {
	
	public SpecificationReference_ISO3200012008Keyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getISO3200012008Keyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_SpecRefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SpecificationReference_CommaKeyword_2 extends KeywordToken  {
	
	public SpecificationReference_CommaKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getCommaKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_ISO3200012008Keyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// section=SectionReference
protected class SpecificationReference_SectionAssignment_3 extends AssignmentToken  {
	
	public SpecificationReference_SectionAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getSectionAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("section",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("section");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSectionReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpecificationReferenceAccess().getSectionSectionReferenceParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SpecificationReference_CommaKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," "table" table=INT)?
protected class SpecificationReference_Group_4 extends GroupToken {
	
	public SpecificationReference_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_TableAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SpecificationReference_CommaKeyword_4_0 extends KeywordToken  {
	
	public SpecificationReference_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_SectionAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "table"
protected class SpecificationReference_TableKeyword_4_1 extends KeywordToken  {
	
	public SpecificationReference_TableKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getTableKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_CommaKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// table=INT
protected class SpecificationReference_TableAssignment_4_2 extends AssignmentToken  {
	
	public SpecificationReference_TableAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpecificationReferenceAccess().getTableAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_TableKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("table",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("table");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpecificationReferenceAccess().getTableINTTerminalRuleCall_4_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpecificationReferenceAccess().getTableINTTerminalRuleCall_4_2_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule SpecificationReference ****************/


/************ begin Rule SectionReference ****************
 *
 * SectionReference:
 * 	"section" section=STRING;
 *
 **/

// "section" section=STRING
protected class SectionReference_Group extends GroupToken {
	
	public SectionReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSectionReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReference_SectionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "section"
protected class SectionReference_SectionKeyword_0 extends KeywordToken  {
	
	public SectionReference_SectionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSectionReferenceAccess().getSectionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// section=STRING
protected class SectionReference_SectionAssignment_1 extends AssignmentToken  {
	
	public SectionReference_SectionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceAccess().getSectionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReference_SectionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("section",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("section");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionReferenceAccess().getSectionSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSectionReferenceAccess().getSectionSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule SectionReference ****************/


/************ begin Rule ArrayMappedDeclaration ****************
 *
 * ArrayMappedDeclaration:
 * 	"array-mapped" name=ValidID ("(" since=SinceVersion ")")? "{" entries+=ArrayMappedEntry+ "}";
 *
 **/

// "array-mapped" name=ValidID ("(" since=SinceVersion ")")? "{" entries+=ArrayMappedEntry+ "}"
protected class ArrayMappedDeclaration_Group extends GroupToken {
	
	public ArrayMappedDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "array-mapped"
protected class ArrayMappedDeclaration_ArrayMappedKeyword_0 extends KeywordToken  {
	
	public ArrayMappedDeclaration_ArrayMappedKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getArrayMappedKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ValidID
protected class ArrayMappedDeclaration_NameAssignment_1 extends AssignmentToken  {
	
	public ArrayMappedDeclaration_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_ArrayMappedKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedDeclarationAccess().getNameValidIDParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getArrayMappedDeclarationAccess().getNameValidIDParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("(" since=SinceVersion ")")?
protected class ArrayMappedDeclaration_Group_2 extends GroupToken {
	
	public ArrayMappedDeclaration_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_RightParenthesisKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ArrayMappedDeclaration_LeftParenthesisKeyword_2_0 extends KeywordToken  {
	
	public ArrayMappedDeclaration_LeftParenthesisKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getLeftParenthesisKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class ArrayMappedDeclaration_SinceAssignment_2_1 extends AssignmentToken  {
	
	public ArrayMappedDeclaration_SinceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getSinceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getArrayMappedDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ArrayMappedDeclaration_RightParenthesisKeyword_2_2 extends KeywordToken  {
	
	public ArrayMappedDeclaration_RightParenthesisKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getRightParenthesisKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_SinceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "{"
protected class ArrayMappedDeclaration_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ArrayMappedDeclaration_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// entries+=ArrayMappedEntry+
protected class ArrayMappedDeclaration_EntriesAssignment_4 extends AssignmentToken  {
	
	public ArrayMappedDeclaration_EntriesAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getEntriesAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("entries",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("entries");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArrayMappedEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArrayMappedDeclarationAccess().getEntriesArrayMappedEntryParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArrayMappedDeclaration_EntriesAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ArrayMappedDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ArrayMappedDeclaration_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public ArrayMappedDeclaration_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedDeclarationAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedDeclaration_EntriesAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ArrayMappedDeclaration ****************/


/************ begin Rule AbstractEntry ****************
 *
 * AbstractEntry:
 * 	ArrayMappedEntry | DictionaryEntry;
 *
 **/

// ArrayMappedEntry | DictionaryEntry
protected class AbstractEntry_Alternatives extends AlternativesToken {

	public AbstractEntry_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractEntryAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntry_ArrayMappedEntryParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractEntry_DictionaryEntryParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedEntryRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDictionaryEntryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ArrayMappedEntry
protected class AbstractEntry_ArrayMappedEntryParserRuleCall_0 extends RuleCallToken {
	
	public AbstractEntry_ArrayMappedEntryParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryAccess().getArrayMappedEntryParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedEntryRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ArrayMappedEntry_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DictionaryEntry
protected class AbstractEntry_DictionaryEntryParserRuleCall_1 extends RuleCallToken {
	
	public AbstractEntry_DictionaryEntryParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryAccess().getDictionaryEntryParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryEntryRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DictionaryEntry_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule AbstractEntry ****************/


/************ begin Rule ArrayMappedEntry ****************
 *
 * ArrayMappedEntry:
 * 	index=INT "->" name=ValidID cached?="cached"? required?="required"? nullable?="nullable"?
 * 	indirectReference=IndirectReference? value=AbstractEntryValue ("(" since=SinceVersion ")")?
 * 	requiresCustomValidation?="custom-validation"? requiresCustomDefault?="custom-default"? ";";
 *
 **/

// index=INT "->" name=ValidID cached?="cached"? required?="required"? nullable?="nullable"?
// indirectReference=IndirectReference? value=AbstractEntryValue ("(" since=SinceVersion ")")?
// requiresCustomValidation?="custom-validation"? requiresCustomDefault?="custom-default"? ";"
protected class ArrayMappedEntry_Group extends GroupToken {
	
	public ArrayMappedEntry_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedEntryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// index=INT
protected class ArrayMappedEntry_IndexAssignment_0 extends AssignmentToken  {
	
	public ArrayMappedEntry_IndexAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getIndexAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("index",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("index");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedEntryAccess().getIndexINTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getArrayMappedEntryAccess().getIndexINTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "->"
protected class ArrayMappedEntry_HyphenMinusGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public ArrayMappedEntry_HyphenMinusGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getHyphenMinusGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_IndexAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ValidID
protected class ArrayMappedEntry_NameAssignment_2 extends AssignmentToken  {
	
	public ArrayMappedEntry_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_HyphenMinusGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedEntryAccess().getNameValidIDParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getArrayMappedEntryAccess().getNameValidIDParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// cached?="cached"?
protected class ArrayMappedEntry_CachedAssignment_3 extends AssignmentToken  {
	
	public ArrayMappedEntry_CachedAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getCachedAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cached",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cached");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayMappedEntryAccess().getCachedCachedKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// required?="required"?
protected class ArrayMappedEntry_RequiredAssignment_4 extends AssignmentToken  {
	
	public ArrayMappedEntry_RequiredAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getRequiredAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_CachedAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("required",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("required");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayMappedEntryAccess().getRequiredRequiredKeyword_4_0();
			return obj;
		}
		return null;
	}

}

// nullable?="nullable"?
protected class ArrayMappedEntry_NullableAssignment_5 extends AssignmentToken  {
	
	public ArrayMappedEntry_NullableAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getNullableAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_RequiredAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_CachedAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ArrayMappedEntry_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nullable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nullable");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayMappedEntryAccess().getNullableNullableKeyword_5_0();
			return obj;
		}
		return null;
	}

}

// indirectReference=IndirectReference?
protected class ArrayMappedEntry_IndirectReferenceAssignment_6 extends AssignmentToken  {
	
	public ArrayMappedEntry_IndirectReferenceAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getIndirectReferenceAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_NullableAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_RequiredAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ArrayMappedEntry_CachedAssignment_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ArrayMappedEntry_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("indirectReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("indirectReference");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_6_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getArrayMappedEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// value=AbstractEntryValue
protected class ArrayMappedEntry_ValueAssignment_7 extends AssignmentToken  {
	
	public ArrayMappedEntry_ValueAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getValueAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArrayMappedEntryAccess().getValueAbstractEntryValueParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArrayMappedEntry_IndirectReferenceAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ArrayMappedEntry_NullableAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ArrayMappedEntry_RequiredAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ArrayMappedEntry_CachedAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ArrayMappedEntry_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("(" since=SinceVersion ")")?
protected class ArrayMappedEntry_Group_8 extends GroupToken {
	
	public ArrayMappedEntry_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_RightParenthesisKeyword_8_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ArrayMappedEntry_LeftParenthesisKeyword_8_0 extends KeywordToken  {
	
	public ArrayMappedEntry_LeftParenthesisKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getLeftParenthesisKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_ValueAssignment_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class ArrayMappedEntry_SinceAssignment_8_1 extends AssignmentToken  {
	
	public ArrayMappedEntry_SinceAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getSinceAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_LeftParenthesisKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getArrayMappedEntryAccess().getSinceSinceVersionEnumRuleCall_8_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getArrayMappedEntryAccess().getSinceSinceVersionEnumRuleCall_8_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ArrayMappedEntry_RightParenthesisKeyword_8_2 extends KeywordToken  {
	
	public ArrayMappedEntry_RightParenthesisKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getRightParenthesisKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_SinceAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// requiresCustomValidation?="custom-validation"?
protected class ArrayMappedEntry_RequiresCustomValidationAssignment_9 extends AssignmentToken  {
	
	public ArrayMappedEntry_RequiresCustomValidationAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getRequiresCustomValidationAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_ValueAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomValidation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomValidation");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayMappedEntryAccess().getRequiresCustomValidationCustomValidationKeyword_9_0();
			return obj;
		}
		return null;
	}

}

// requiresCustomDefault?="custom-default"?
protected class ArrayMappedEntry_RequiresCustomDefaultAssignment_10 extends AssignmentToken  {
	
	public ArrayMappedEntry_RequiresCustomDefaultAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getRequiresCustomDefaultAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_RequiresCustomValidationAssignment_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ArrayMappedEntry_ValueAssignment_7(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomDefault",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayMappedEntryAccess().getRequiresCustomDefaultCustomDefaultKeyword_10_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ArrayMappedEntry_SemicolonKeyword_11 extends KeywordToken  {
	
	public ArrayMappedEntry_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedEntryAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntry_RequiresCustomDefaultAssignment_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayMappedEntry_RequiresCustomValidationAssignment_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ArrayMappedEntry_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ArrayMappedEntry_ValueAssignment_7(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule ArrayMappedEntry ****************/


/************ begin Rule DictionaryDeclaration ****************
 *
 * DictionaryDeclaration:
 * 	("dict-obj" | stream?="stream-obj") name=ValidID ("extends" superTypes+=[DictionaryDeclaration|QualifiedName] (","
 * 	superTypes+=[DictionaryDeclaration|QualifiedName])*)? ("(" since=SinceVersion ")")? "{" ("config" "{"
 * 	subtypeConfig=SubtypeConfig? "}")? entries+=DictionaryEntry* "}";
 *
 **/

// ("dict-obj" | stream?="stream-obj") name=ValidID ("extends" superTypes+=[DictionaryDeclaration|QualifiedName] (","
// superTypes+=[DictionaryDeclaration|QualifiedName])*)? ("(" since=SinceVersion ")")? "{" ("config" "{"
// subtypeConfig=SubtypeConfig? "}")? entries+=DictionaryEntry* "}"
protected class DictionaryDeclaration_Group extends GroupToken {
	
	public DictionaryDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "dict-obj" | stream?="stream-obj"
protected class DictionaryDeclaration_Alternatives_0 extends AlternativesToken {

	public DictionaryDeclaration_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_DictObjKeyword_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_StreamAssignment_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "dict-obj"
protected class DictionaryDeclaration_DictObjKeyword_0_0 extends KeywordToken  {
	
	public DictionaryDeclaration_DictObjKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getDictObjKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// stream?="stream-obj"
protected class DictionaryDeclaration_StreamAssignment_0_1 extends AssignmentToken  {
	
	public DictionaryDeclaration_StreamAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getStreamAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("stream",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("stream");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryDeclarationAccess().getStreamStreamObjKeyword_0_1_0();
			return obj;
		}
		return null;
	}

}


// name=ValidID
protected class DictionaryDeclaration_NameAssignment_1 extends AssignmentToken  {
	
	public DictionaryDeclaration_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryDeclarationAccess().getNameValidIDParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDictionaryDeclarationAccess().getNameValidIDParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("extends" superTypes+=[DictionaryDeclaration|QualifiedName] ("," superTypes+=[DictionaryDeclaration|QualifiedName])*)?
protected class DictionaryDeclaration_Group_2 extends GroupToken {
	
	public DictionaryDeclaration_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_SuperTypesAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "extends"
protected class DictionaryDeclaration_ExtendsKeyword_2_0 extends KeywordToken  {
	
	public DictionaryDeclaration_ExtendsKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getExtendsKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// superTypes+=[DictionaryDeclaration|QualifiedName]
protected class DictionaryDeclaration_SuperTypesAssignment_2_1 extends AssignmentToken  {
	
	public DictionaryDeclaration_SuperTypesAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getSuperTypesAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_ExtendsKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("superTypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superTypes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," superTypes+=[DictionaryDeclaration|QualifiedName])*
protected class DictionaryDeclaration_Group_2_2 extends GroupToken {
	
	public DictionaryDeclaration_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_SuperTypesAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DictionaryDeclaration_CommaKeyword_2_2_0 extends KeywordToken  {
	
	public DictionaryDeclaration_CommaKeyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getCommaKeyword_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_SuperTypesAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// superTypes+=[DictionaryDeclaration|QualifiedName]
protected class DictionaryDeclaration_SuperTypesAssignment_2_2_1 extends AssignmentToken  {
	
	public DictionaryDeclaration_SuperTypesAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getSuperTypesAssignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_CommaKeyword_2_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("superTypes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("superTypes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDictionaryDeclarationAccess().getSuperTypesDictionaryDeclarationCrossReference_2_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



// ("(" since=SinceVersion ")")?
protected class DictionaryDeclaration_Group_3 extends GroupToken {
	
	public DictionaryDeclaration_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_RightParenthesisKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DictionaryDeclaration_LeftParenthesisKeyword_3_0 extends KeywordToken  {
	
	public DictionaryDeclaration_LeftParenthesisKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getLeftParenthesisKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class DictionaryDeclaration_SinceAssignment_3_1 extends AssignmentToken  {
	
	public DictionaryDeclaration_SinceAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getSinceAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_LeftParenthesisKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getDictionaryDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class DictionaryDeclaration_RightParenthesisKeyword_3_2 extends KeywordToken  {
	
	public DictionaryDeclaration_RightParenthesisKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getRightParenthesisKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_SinceAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "{"
protected class DictionaryDeclaration_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public DictionaryDeclaration_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ("config" "{" subtypeConfig=SubtypeConfig? "}")?
protected class DictionaryDeclaration_Group_5 extends GroupToken {
	
	public DictionaryDeclaration_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_RightCurlyBracketKeyword_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "config"
protected class DictionaryDeclaration_ConfigKeyword_5_0 extends KeywordToken  {
	
	public DictionaryDeclaration_ConfigKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getConfigKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class DictionaryDeclaration_LeftCurlyBracketKeyword_5_1 extends KeywordToken  {
	
	public DictionaryDeclaration_LeftCurlyBracketKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getLeftCurlyBracketKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_ConfigKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subtypeConfig=SubtypeConfig?
protected class DictionaryDeclaration_SubtypeConfigAssignment_5_2 extends AssignmentToken  {
	
	public DictionaryDeclaration_SubtypeConfigAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getSubtypeConfigAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subtypeConfig",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subtypeConfig");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubtypeConfigRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDictionaryDeclarationAccess().getSubtypeConfigSubtypeConfigParserRuleCall_5_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DictionaryDeclaration_LeftCurlyBracketKeyword_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DictionaryDeclaration_RightCurlyBracketKeyword_5_3 extends KeywordToken  {
	
	public DictionaryDeclaration_RightCurlyBracketKeyword_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getRightCurlyBracketKeyword_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_SubtypeConfigAssignment_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// entries+=DictionaryEntry*
protected class DictionaryDeclaration_EntriesAssignment_6 extends AssignmentToken  {
	
	public DictionaryDeclaration_EntriesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getEntriesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("entries",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("entries");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDictionaryEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDictionaryDeclarationAccess().getEntriesDictionaryEntryParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DictionaryDeclaration_EntriesAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DictionaryDeclaration_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DictionaryDeclaration_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DictionaryDeclaration_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public DictionaryDeclaration_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclaration_EntriesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryDeclaration_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryDeclaration_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule DictionaryDeclaration ****************/


/************ begin Rule SubtypeConfig ****************
 *
 * SubtypeConfig:
 * 	"subtypes" candidates+=[DictionaryDeclaration|QualifiedName] ("," candidates+=[DictionaryDeclaration|QualifiedName])*
 * 	";";
 *
 **/

// "subtypes" candidates+=[DictionaryDeclaration|QualifiedName] ("," candidates+=[DictionaryDeclaration|QualifiedName])*
// ";"
protected class SubtypeConfig_Group extends GroupToken {
	
	public SubtypeConfig_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubtypeConfigRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "subtypes"
protected class SubtypeConfig_SubtypesKeyword_0 extends KeywordToken  {
	
	public SubtypeConfig_SubtypesKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getSubtypesKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// candidates+=[DictionaryDeclaration|QualifiedName]
protected class SubtypeConfig_CandidatesAssignment_1 extends AssignmentToken  {
	
	public SubtypeConfig_CandidatesAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getCandidatesAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_SubtypesKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("candidates",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("candidates");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," candidates+=[DictionaryDeclaration|QualifiedName])*
protected class SubtypeConfig_Group_2 extends GroupToken {
	
	public SubtypeConfig_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_CandidatesAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubtypeConfig_CommaKeyword_2_0 extends KeywordToken  {
	
	public SubtypeConfig_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubtypeConfig_CandidatesAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// candidates+=[DictionaryDeclaration|QualifiedName]
protected class SubtypeConfig_CandidatesAssignment_2_1 extends AssignmentToken  {
	
	public SubtypeConfig_CandidatesAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getCandidatesAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_CommaKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("candidates",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("candidates");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubtypeConfigAccess().getCandidatesDictionaryDeclarationCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class SubtypeConfig_SemicolonKeyword_3 extends KeywordToken  {
	
	public SubtypeConfig_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubtypeConfigAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubtypeConfig_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubtypeConfig_CandidatesAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubtypeConfig ****************/


/************ begin Rule DictionaryEntry ****************
 *
 * //AbstractDictionarySubtypeDetector:
 * 
 * //	NamedEntrySubtypeDetector | EntryExistsSubtypeDetector | IntegerEntryValueSubtypeDetector;
 *  //
 * 
 * //NamedEntrySubtypeDetector:
 *  //	'name-detector' '{'
 *  //	'key' subtypeName=NAME_OBJECT ';'
 * 
 * //	'subtypes' subtypes+=[DictionaryDeclaration|QualifiedName] (','
 * 
 * //	subtypes+=[DictionaryDeclaration|QualifiedName])* ';'
 *  //	'}';
 *  //
 *  //EntryExistsSubtypeDetector:
 * 
 * //	'entry-detector' '{'
 *  //	'key' entryKey=NAME_OBJECT ';'
 * 
 * //	'subtype' subtype=[DictionaryDeclaration|QualifiedName] ';'
 *  //	'}';
 *  //
 *  //IntegerEntryValueSubtypeDetector:
 * 
 * //	'int-value-detector' '{'
 *  //	'key' entryKey=NAME_OBJECT ';'
 * 
 * //	'subtypes' '{' entries+=IntegerEntryValueSubtypeDetectorEntry+ '}'
 *  //	'}';
 *  //
 * 
 * //IntegerEntryValueSubtypeDetectorEntry:
 * 
 * //	intValue=IntLiteral '->' subtype=[DictionaryDeclaration|QualifiedName] ';';
 *  //
 * 
 * //DictionaryDeclarationGlobalSubtypes:
 *  //	'subtypes' NAME_OBJECT;
 *  DictionaryEntry:
 * 	key=NAME_OBJECT ("as" alias=ID)? cached?="cached"? required?="required"? inheritable?="inheritable"?
 * 	indirectReference=IndirectReference? value=AbstractEntryValue requiresCustomValidation?="custom-validation"?
 * 	requiresCustomDefault?="custom-default"? ("(" since=SinceVersion ")")? ";";
 *
 **/

// key=NAME_OBJECT ("as" alias=ID)? cached?="cached"? required?="required"? inheritable?="inheritable"?
// indirectReference=IndirectReference? value=AbstractEntryValue requiresCustomValidation?="custom-validation"?
// requiresCustomDefault?="custom-default"? ("(" since=SinceVersion ")")? ";"
protected class DictionaryEntry_Group extends GroupToken {
	
	public DictionaryEntry_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_SemicolonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryEntryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// key=NAME_OBJECT
protected class DictionaryEntry_KeyAssignment_0 extends AssignmentToken  {
	
	public DictionaryEntry_KeyAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getKeyAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("key",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("key");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryEntryAccess().getKeyNAME_OBJECTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDictionaryEntryAccess().getKeyNAME_OBJECTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("as" alias=ID)?
protected class DictionaryEntry_Group_1 extends GroupToken {
	
	public DictionaryEntry_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_AliasAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "as"
protected class DictionaryEntry_AsKeyword_1_0 extends KeywordToken  {
	
	public DictionaryEntry_AsKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getAsKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// alias=ID
protected class DictionaryEntry_AliasAssignment_1_1 extends AssignmentToken  {
	
	public DictionaryEntry_AliasAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getAliasAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_AsKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("alias",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("alias");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryEntryAccess().getAliasIDTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDictionaryEntryAccess().getAliasIDTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}


// cached?="cached"?
protected class DictionaryEntry_CachedAssignment_2 extends AssignmentToken  {
	
	public DictionaryEntry_CachedAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getCachedAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cached",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cached");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryEntryAccess().getCachedCachedKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// required?="required"?
protected class DictionaryEntry_RequiredAssignment_3 extends AssignmentToken  {
	
	public DictionaryEntry_RequiredAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getRequiredAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_CachedAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("required",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("required");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryEntryAccess().getRequiredRequiredKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// inheritable?="inheritable"?
protected class DictionaryEntry_InheritableAssignment_4 extends AssignmentToken  {
	
	public DictionaryEntry_InheritableAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getInheritableAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_RequiredAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_CachedAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryEntry_Group_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inheritable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inheritable");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryEntryAccess().getInheritableInheritableKeyword_4_0();
			return obj;
		}
		return null;
	}

}

// indirectReference=IndirectReference?
protected class DictionaryEntry_IndirectReferenceAssignment_5 extends AssignmentToken  {
	
	public DictionaryEntry_IndirectReferenceAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getIndirectReferenceAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_InheritableAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_RequiredAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryEntry_CachedAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DictionaryEntry_Group_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("indirectReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("indirectReference");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_5_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getDictionaryEntryAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// value=AbstractEntryValue
protected class DictionaryEntry_ValueAssignment_6 extends AssignmentToken  {
	
	public DictionaryEntry_ValueAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getValueAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDictionaryEntryAccess().getValueAbstractEntryValueParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DictionaryEntry_IndirectReferenceAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DictionaryEntry_InheritableAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DictionaryEntry_RequiredAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DictionaryEntry_CachedAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DictionaryEntry_Group_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new DictionaryEntry_KeyAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// requiresCustomValidation?="custom-validation"?
protected class DictionaryEntry_RequiresCustomValidationAssignment_7 extends AssignmentToken  {
	
	public DictionaryEntry_RequiresCustomValidationAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getRequiresCustomValidationAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_ValueAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomValidation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomValidation");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryEntryAccess().getRequiresCustomValidationCustomValidationKeyword_7_0();
			return obj;
		}
		return null;
	}

}

// requiresCustomDefault?="custom-default"?
protected class DictionaryEntry_RequiresCustomDefaultAssignment_8 extends AssignmentToken  {
	
	public DictionaryEntry_RequiresCustomDefaultAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getRequiresCustomDefaultAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_RequiresCustomValidationAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_ValueAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomDefault",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDictionaryEntryAccess().getRequiresCustomDefaultCustomDefaultKeyword_8_0();
			return obj;
		}
		return null;
	}

}

// ("(" since=SinceVersion ")")?
protected class DictionaryEntry_Group_9 extends GroupToken {
	
	public DictionaryEntry_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_RightParenthesisKeyword_9_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DictionaryEntry_LeftParenthesisKeyword_9_0 extends KeywordToken  {
	
	public DictionaryEntry_LeftParenthesisKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getLeftParenthesisKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_RequiresCustomDefaultAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_RequiresCustomValidationAssignment_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryEntry_ValueAssignment_6(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class DictionaryEntry_SinceAssignment_9_1 extends AssignmentToken  {
	
	public DictionaryEntry_SinceAssignment_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getSinceAssignment_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_LeftParenthesisKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getDictionaryEntryAccess().getSinceSinceVersionEnumRuleCall_9_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getDictionaryEntryAccess().getSinceSinceVersionEnumRuleCall_9_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class DictionaryEntry_RightParenthesisKeyword_9_2 extends KeywordToken  {
	
	public DictionaryEntry_RightParenthesisKeyword_9_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getRightParenthesisKeyword_9_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_SinceAssignment_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class DictionaryEntry_SemicolonKeyword_10 extends KeywordToken  {
	
	public DictionaryEntry_SemicolonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryEntryAccess().getSemicolonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryEntry_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DictionaryEntry_RequiresCustomDefaultAssignment_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DictionaryEntry_RequiresCustomValidationAssignment_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DictionaryEntry_ValueAssignment_6(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule DictionaryEntry ****************/


/************ begin Rule PackageDeclaration ****************
 *
 * PackageDeclaration:
 * 	"package" name=QualifiedName "{" elements+=AbstractDeclaration* "}";
 *
 **/

// "package" name=QualifiedName "{" elements+=AbstractDeclaration* "}"
protected class PackageDeclaration_Group extends GroupToken {
	
	public PackageDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageDeclaration_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "package"
protected class PackageDeclaration_PackageKeyword_0 extends KeywordToken  {
	
	public PackageDeclaration_PackageKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class PackageDeclaration_NameAssignment_1 extends AssignmentToken  {
	
	public PackageDeclaration_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageDeclaration_PackageKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PackageDeclaration_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public PackageDeclaration_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// elements+=AbstractDeclaration*
protected class PackageDeclaration_ElementsAssignment_3 extends AssignmentToken  {
	
	public PackageDeclaration_ElementsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractDeclaration_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractDeclarationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageDeclarationAccess().getElementsAbstractDeclarationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageDeclaration_ElementsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PackageDeclaration_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class PackageDeclaration_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public PackageDeclaration_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageDeclaration_ElementsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageDeclaration_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule PackageDeclaration ****************/


/************ begin Rule BitFlagsDeclaration ****************
 *
 * BitFlagsDeclaration:
 * 	specificationReference=SpecificationReference "bit-flags" name=ValidID ("(" since=SinceVersion ")")? "{"
 * 	declarations+=BitFlagsDeclarationPart+ "}";
 *
 **/

// specificationReference=SpecificationReference "bit-flags" name=ValidID ("(" since=SinceVersion ")")? "{"
// declarations+=BitFlagsDeclarationPart+ "}"
protected class BitFlagsDeclaration_Group extends GroupToken {
	
	public BitFlagsDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitFlagsDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// specificationReference=SpecificationReference
protected class BitFlagsDeclaration_SpecificationReferenceAssignment_0 extends AssignmentToken  {
	
	public BitFlagsDeclaration_SpecificationReferenceAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getSpecificationReferenceAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecificationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("specificationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("specificationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSpecificationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBitFlagsDeclarationAccess().getSpecificationReferenceSpecificationReferenceParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "bit-flags"
protected class BitFlagsDeclaration_BitFlagsKeyword_1 extends KeywordToken  {
	
	public BitFlagsDeclaration_BitFlagsKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getBitFlagsKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_SpecificationReferenceAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ValidID
protected class BitFlagsDeclaration_NameAssignment_2 extends AssignmentToken  {
	
	public BitFlagsDeclaration_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_BitFlagsKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBitFlagsDeclarationAccess().getNameValidIDParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBitFlagsDeclarationAccess().getNameValidIDParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("(" since=SinceVersion ")")?
protected class BitFlagsDeclaration_Group_3 extends GroupToken {
	
	public BitFlagsDeclaration_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_RightParenthesisKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class BitFlagsDeclaration_LeftParenthesisKeyword_3_0 extends KeywordToken  {
	
	public BitFlagsDeclaration_LeftParenthesisKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getLeftParenthesisKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class BitFlagsDeclaration_SinceAssignment_3_1 extends AssignmentToken  {
	
	public BitFlagsDeclaration_SinceAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getSinceAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_LeftParenthesisKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBitFlagsDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBitFlagsDeclarationAccess().getSinceSinceVersionEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class BitFlagsDeclaration_RightParenthesisKeyword_3_2 extends KeywordToken  {
	
	public BitFlagsDeclaration_RightParenthesisKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getRightParenthesisKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_SinceAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "{"
protected class BitFlagsDeclaration_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public BitFlagsDeclaration_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BitFlagsDeclaration_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declarations+=BitFlagsDeclarationPart+
protected class BitFlagsDeclaration_DeclarationsAssignment_5 extends AssignmentToken  {
	
	public BitFlagsDeclaration_DeclarationsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getDeclarationsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declarations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declarations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBitFlagsDeclarationPartRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBitFlagsDeclarationAccess().getDeclarationsBitFlagsDeclarationPartParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BitFlagsDeclaration_DeclarationsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BitFlagsDeclaration_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class BitFlagsDeclaration_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public BitFlagsDeclaration_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclaration_DeclarationsAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule BitFlagsDeclaration ****************/


/************ begin Rule BitFlagsDeclarationPart ****************
 *
 * BitFlagsDeclarationPart:
 * 	index=INT "->" name=ValidID ("(" since=SinceVersion ")")? ";";
 *
 **/

// index=INT "->" name=ValidID ("(" since=SinceVersion ")")? ";"
protected class BitFlagsDeclarationPart_Group extends GroupToken {
	
	public BitFlagsDeclarationPart_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitFlagsDeclarationPartRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// index=INT
protected class BitFlagsDeclarationPart_IndexAssignment_0 extends AssignmentToken  {
	
	public BitFlagsDeclarationPart_IndexAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getIndexAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("index",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("index");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBitFlagsDeclarationPartAccess().getIndexINTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBitFlagsDeclarationPartAccess().getIndexINTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "->"
protected class BitFlagsDeclarationPart_HyphenMinusGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public BitFlagsDeclarationPart_HyphenMinusGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getHyphenMinusGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_IndexAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ValidID
protected class BitFlagsDeclarationPart_NameAssignment_2 extends AssignmentToken  {
	
	public BitFlagsDeclarationPart_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_HyphenMinusGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBitFlagsDeclarationPartAccess().getNameValidIDParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBitFlagsDeclarationPartAccess().getNameValidIDParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("(" since=SinceVersion ")")?
protected class BitFlagsDeclarationPart_Group_3 extends GroupToken {
	
	public BitFlagsDeclarationPart_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_RightParenthesisKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class BitFlagsDeclarationPart_LeftParenthesisKeyword_3_0 extends KeywordToken  {
	
	public BitFlagsDeclarationPart_LeftParenthesisKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getLeftParenthesisKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class BitFlagsDeclarationPart_SinceAssignment_3_1 extends AssignmentToken  {
	
	public BitFlagsDeclarationPart_SinceAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getSinceAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_LeftParenthesisKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBitFlagsDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBitFlagsDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class BitFlagsDeclarationPart_RightParenthesisKeyword_3_2 extends KeywordToken  {
	
	public BitFlagsDeclarationPart_RightParenthesisKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getRightParenthesisKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_SinceAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class BitFlagsDeclarationPart_SemicolonKeyword_4 extends KeywordToken  {
	
	public BitFlagsDeclarationPart_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsDeclarationPartAccess().getSemicolonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsDeclarationPart_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BitFlagsDeclarationPart_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule BitFlagsDeclarationPart ****************/


/************ begin Rule NameEnumDeclaration ****************
 *
 * NameEnumDeclaration:
 * 	"name-enum" name=ValidID ("(" since=SinceVersion ")")? "{" declarations+=NameEnumDeclarationPart (","
 * 	declarations+=NameEnumDeclarationPart)* ","? // ignore trailing comma, just like Java does 
 *  "}";
 *
 **/

// "name-enum" name=ValidID ("(" since=SinceVersion ")")? "{" declarations+=NameEnumDeclarationPart (","
// declarations+=NameEnumDeclarationPart)* ","? // ignore trailing comma, just like Java does 
//  "}"
protected class NameEnumDeclaration_Group extends GroupToken {
	
	public NameEnumDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameEnumDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "name-enum"
protected class NameEnumDeclaration_NameEnumKeyword_0 extends KeywordToken  {
	
	public NameEnumDeclaration_NameEnumKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getNameEnumKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ValidID
protected class NameEnumDeclaration_NameAssignment_1 extends AssignmentToken  {
	
	public NameEnumDeclaration_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_NameEnumKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumDeclarationAccess().getNameValidIDParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getNameEnumDeclarationAccess().getNameValidIDParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("(" since=SinceVersion ")")?
protected class NameEnumDeclaration_Group_2 extends GroupToken {
	
	public NameEnumDeclaration_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_RightParenthesisKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class NameEnumDeclaration_LeftParenthesisKeyword_2_0 extends KeywordToken  {
	
	public NameEnumDeclaration_LeftParenthesisKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getLeftParenthesisKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class NameEnumDeclaration_SinceAssignment_2_1 extends AssignmentToken  {
	
	public NameEnumDeclaration_SinceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getSinceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getNameEnumDeclarationAccess().getSinceSinceVersionEnumRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class NameEnumDeclaration_RightParenthesisKeyword_2_2 extends KeywordToken  {
	
	public NameEnumDeclaration_RightParenthesisKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getRightParenthesisKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_SinceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "{"
protected class NameEnumDeclaration_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public NameEnumDeclaration_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declarations+=NameEnumDeclarationPart
protected class NameEnumDeclaration_DeclarationsAssignment_4 extends AssignmentToken  {
	
	public NameEnumDeclaration_DeclarationsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getDeclarationsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declarations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declarations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNameEnumDeclarationPartRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNameEnumDeclarationAccess().getDeclarationsNameEnumDeclarationPartParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NameEnumDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," declarations+=NameEnumDeclarationPart)*
protected class NameEnumDeclaration_Group_5 extends GroupToken {
	
	public NameEnumDeclaration_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_DeclarationsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class NameEnumDeclaration_CommaKeyword_5_0 extends KeywordToken  {
	
	public NameEnumDeclaration_CommaKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getCommaKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumDeclaration_DeclarationsAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declarations+=NameEnumDeclarationPart
protected class NameEnumDeclaration_DeclarationsAssignment_5_1 extends AssignmentToken  {
	
	public NameEnumDeclaration_DeclarationsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getDeclarationsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declarations",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declarations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNameEnumDeclarationPartRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNameEnumDeclarationAccess().getDeclarationsNameEnumDeclarationPartParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NameEnumDeclaration_CommaKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class NameEnumDeclaration_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public NameEnumDeclaration_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclaration_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumDeclaration_DeclarationsAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule NameEnumDeclaration ****************/


/************ begin Rule NameEnumDeclarationPart ****************
 *
 * NameEnumDeclarationPart:
 * 	constant=NAME_OBJECT ("as" alias=ID)? ("(" since=SinceVersion ")")?;
 *
 **/

// constant=NAME_OBJECT ("as" alias=ID)? ("(" since=SinceVersion ")")?
protected class NameEnumDeclarationPart_Group extends GroupToken {
	
	public NameEnumDeclarationPart_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumDeclarationPart_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new NameEnumDeclarationPart_ConstantAssignment_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameEnumDeclarationPartRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// constant=NAME_OBJECT
protected class NameEnumDeclarationPart_ConstantAssignment_0 extends AssignmentToken  {
	
	public NameEnumDeclarationPart_ConstantAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getConstantAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constant",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constant");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumDeclarationPartAccess().getConstantNAME_OBJECTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameEnumDeclarationPartAccess().getConstantNAME_OBJECTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("as" alias=ID)?
protected class NameEnumDeclarationPart_Group_1 extends GroupToken {
	
	public NameEnumDeclarationPart_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_AliasAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "as"
protected class NameEnumDeclarationPart_AsKeyword_1_0 extends KeywordToken  {
	
	public NameEnumDeclarationPart_AsKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getAsKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_ConstantAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// alias=ID
protected class NameEnumDeclarationPart_AliasAssignment_1_1 extends AssignmentToken  {
	
	public NameEnumDeclarationPart_AliasAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getAliasAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_AsKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("alias",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("alias");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumDeclarationPartAccess().getAliasIDTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameEnumDeclarationPartAccess().getAliasIDTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}


// ("(" since=SinceVersion ")")?
protected class NameEnumDeclarationPart_Group_2 extends GroupToken {
	
	public NameEnumDeclarationPart_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_RightParenthesisKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class NameEnumDeclarationPart_LeftParenthesisKeyword_2_0 extends KeywordToken  {
	
	public NameEnumDeclarationPart_LeftParenthesisKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getLeftParenthesisKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumDeclarationPart_ConstantAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class NameEnumDeclarationPart_SinceAssignment_2_1 extends AssignmentToken  {
	
	public NameEnumDeclarationPart_SinceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getSinceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_2_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getNameEnumDeclarationPartAccess().getSinceSinceVersionEnumRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class NameEnumDeclarationPart_RightParenthesisKeyword_2_2 extends KeywordToken  {
	
	public NameEnumDeclarationPart_RightParenthesisKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumDeclarationPartAccess().getRightParenthesisKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumDeclarationPart_SinceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule NameEnumDeclarationPart ****************/


/************ begin Rule AbstractEntryValue ****************
 *
 * AbstractEntryValue:
 * 	NullObjectEntryValue | NameTreeEntryValue | NumberTreeEntryValue | NameObjectEntryValue | NumberObjectEntryValue |
 * 	IntegerObjectEntryValue | RealObjectEntryValue | NameEnumEntryValue | ReferenceEntryValue | ParentReferenceEntryValue
 * 	| DictionaryDeclarationEntryValue | DictionaryObjectEntryValue | ArrayEntryValue | MappingDictEntryValue |
 * 	BooleanEntryValue | DateEntryValue | AlternativeEntryValue | ObjectEntryValue | StringEntryValue |
 * 	ArrayMappedEntryValue | BitFlagsEntryValue;
 *
 **/

// NullObjectEntryValue | NameTreeEntryValue | NumberTreeEntryValue | NameObjectEntryValue | NumberObjectEntryValue |
// IntegerObjectEntryValue | RealObjectEntryValue | NameEnumEntryValue | ReferenceEntryValue | ParentReferenceEntryValue
// | DictionaryDeclarationEntryValue | DictionaryObjectEntryValue | ArrayEntryValue | MappingDictEntryValue |
// BooleanEntryValue | DateEntryValue | AlternativeEntryValue | ObjectEntryValue | StringEntryValue |
// ArrayMappedEntryValue | BitFlagsEntryValue
protected class AbstractEntryValue_Alternatives extends AlternativesToken {

	public AbstractEntryValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_NullObjectEntryValueParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractEntryValue_NameTreeEntryValueParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractEntryValue_NumberTreeEntryValueParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractEntryValue_NameObjectEntryValueParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractEntryValue_NumberObjectEntryValueParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractEntryValue_IntegerObjectEntryValueParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractEntryValue_RealObjectEntryValueParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new AbstractEntryValue_NameEnumEntryValueParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new AbstractEntryValue_ReferenceEntryValueParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new AbstractEntryValue_ParentReferenceEntryValueParserRuleCall_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new AbstractEntryValue_DictionaryDeclarationEntryValueParserRuleCall_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new AbstractEntryValue_DictionaryObjectEntryValueParserRuleCall_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new AbstractEntryValue_ArrayEntryValueParserRuleCall_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new AbstractEntryValue_MappingDictEntryValueParserRuleCall_13(lastRuleCallOrigin, this, 13, inst);
			case 14: return new AbstractEntryValue_BooleanEntryValueParserRuleCall_14(lastRuleCallOrigin, this, 14, inst);
			case 15: return new AbstractEntryValue_DateEntryValueParserRuleCall_15(lastRuleCallOrigin, this, 15, inst);
			case 16: return new AbstractEntryValue_AlternativeEntryValueParserRuleCall_16(lastRuleCallOrigin, this, 16, inst);
			case 17: return new AbstractEntryValue_ObjectEntryValueParserRuleCall_17(lastRuleCallOrigin, this, 17, inst);
			case 18: return new AbstractEntryValue_StringEntryValueParserRuleCall_18(lastRuleCallOrigin, this, 18, inst);
			case 19: return new AbstractEntryValue_ArrayMappedEntryValueParserRuleCall_19(lastRuleCallOrigin, this, 19, inst);
			case 20: return new AbstractEntryValue_BitFlagsEntryValueParserRuleCall_20(lastRuleCallOrigin, this, 20, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAlternativeEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getArrayEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getArrayMappedEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBitFlagsEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBooleanEntryValueAccess().getBooleanEntryValueAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDateEntryValueAccess().getDateEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDictionaryDeclarationEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDictionaryObjectEntryValueAccess().getDictionaryObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerObjectEntryValueAccess().getIntegerObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMappingDictEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNameEnumEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNameObjectEntryValueAccess().getNameObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNameTreeEntryValueAccess().getNameTreeEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNullObjectEntryValueAccess().getNullObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNumberObjectEntryValueAccess().getNumberObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getObjectEntryValueAccess().getObjectEntryValueAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getParentReferenceEntryValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRealObjectEntryValueAccess().getRealObjectEntryValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getReferenceEntryValueAccess().getReferenceEntryValueAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStringEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// NullObjectEntryValue
protected class AbstractEntryValue_NullObjectEntryValueParserRuleCall_0 extends RuleCallToken {
	
	public AbstractEntryValue_NullObjectEntryValueParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNullObjectEntryValueParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NullObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNullObjectEntryValueAccess().getNullObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(NullObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NameTreeEntryValue
protected class AbstractEntryValue_NameTreeEntryValueParserRuleCall_1 extends RuleCallToken {
	
	public AbstractEntryValue_NameTreeEntryValueParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNameTreeEntryValueParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameTreeEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameTreeEntryValueAccess().getNameTreeEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(NameTreeEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NumberTreeEntryValue
protected class AbstractEntryValue_NumberTreeEntryValueParserRuleCall_2 extends RuleCallToken {
	
	public AbstractEntryValue_NumberTreeEntryValueParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNumberTreeEntryValueParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberTreeEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberTreeEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NameObjectEntryValue
protected class AbstractEntryValue_NameObjectEntryValueParserRuleCall_3 extends RuleCallToken {
	
	public AbstractEntryValue_NameObjectEntryValueParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNameObjectEntryValueParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameObjectEntryValueAccess().getNameObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(NameObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NumberObjectEntryValue
protected class AbstractEntryValue_NumberObjectEntryValueParserRuleCall_4 extends RuleCallToken {
	
	public AbstractEntryValue_NumberObjectEntryValueParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNumberObjectEntryValueParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberObjectEntryValueAccess().getNumberObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerObjectEntryValue
protected class AbstractEntryValue_IntegerObjectEntryValueParserRuleCall_5 extends RuleCallToken {
	
	public AbstractEntryValue_IntegerObjectEntryValueParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getIntegerObjectEntryValueParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerObjectEntryValueAccess().getIntegerObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RealObjectEntryValue
protected class AbstractEntryValue_RealObjectEntryValueParserRuleCall_6 extends RuleCallToken {
	
	public AbstractEntryValue_RealObjectEntryValueParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getRealObjectEntryValueParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRealObjectEntryValueAccess().getRealObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(RealObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NameEnumEntryValue
protected class AbstractEntryValue_NameEnumEntryValueParserRuleCall_7 extends RuleCallToken {
	
	public AbstractEntryValue_NameEnumEntryValueParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getNameEnumEntryValueParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameEnumEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NameEnumEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ReferenceEntryValue
protected class AbstractEntryValue_ReferenceEntryValueParserRuleCall_8 extends RuleCallToken {
	
	public AbstractEntryValue_ReferenceEntryValueParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getReferenceEntryValueParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceEntryValueAccess().getReferenceEntryValueAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(ReferenceEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ParentReferenceEntryValue
protected class AbstractEntryValue_ParentReferenceEntryValueParserRuleCall_9 extends RuleCallToken {
	
	public AbstractEntryValue_ParentReferenceEntryValueParserRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getParentReferenceEntryValueParserRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParentReferenceEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParentReferenceEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ParentReferenceEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DictionaryDeclarationEntryValue
protected class AbstractEntryValue_DictionaryDeclarationEntryValueParserRuleCall_10 extends RuleCallToken {
	
	public AbstractEntryValue_DictionaryDeclarationEntryValueParserRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getDictionaryDeclarationEntryValueParserRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclarationEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryDeclarationEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DictionaryDeclarationEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DictionaryObjectEntryValue
protected class AbstractEntryValue_DictionaryObjectEntryValueParserRuleCall_11 extends RuleCallToken {
	
	public AbstractEntryValue_DictionaryObjectEntryValueParserRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getDictionaryObjectEntryValueParserRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryObjectEntryValueAccess().getDictionaryObjectEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(DictionaryObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ArrayEntryValue
protected class AbstractEntryValue_ArrayEntryValueParserRuleCall_12 extends RuleCallToken {
	
	public AbstractEntryValue_ArrayEntryValueParserRuleCall_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getArrayEntryValueParserRuleCall_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ArrayEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MappingDictEntryValue
protected class AbstractEntryValue_MappingDictEntryValueParserRuleCall_13 extends RuleCallToken {
	
	public AbstractEntryValue_MappingDictEntryValueParserRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getMappingDictEntryValueParserRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMappingDictEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MappingDictEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// BooleanEntryValue
protected class AbstractEntryValue_BooleanEntryValueParserRuleCall_14 extends RuleCallToken {
	
	public AbstractEntryValue_BooleanEntryValueParserRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getBooleanEntryValueParserRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanEntryValueAccess().getBooleanEntryValueAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(BooleanEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DateEntryValue
protected class AbstractEntryValue_DateEntryValueParserRuleCall_15 extends RuleCallToken {
	
	public AbstractEntryValue_DateEntryValueParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getDateEntryValueParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDateEntryValueAccess().getDateEntryValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(DateEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AlternativeEntryValue
protected class AbstractEntryValue_AlternativeEntryValueParserRuleCall_16 extends RuleCallToken {
	
	public AbstractEntryValue_AlternativeEntryValueParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getAlternativeEntryValueParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAlternativeEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AlternativeEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ObjectEntryValue
protected class AbstractEntryValue_ObjectEntryValueParserRuleCall_17 extends RuleCallToken {
	
	public AbstractEntryValue_ObjectEntryValueParserRuleCall_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getObjectEntryValueParserRuleCall_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ObjectEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getObjectEntryValueAccess().getObjectEntryValueAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(ObjectEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// StringEntryValue
protected class AbstractEntryValue_StringEntryValueParserRuleCall_18 extends RuleCallToken {
	
	public AbstractEntryValue_StringEntryValueParserRuleCall_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getStringEntryValueParserRuleCall_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StringEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ArrayMappedEntryValue
protected class AbstractEntryValue_ArrayMappedEntryValueParserRuleCall_19 extends RuleCallToken {
	
	public AbstractEntryValue_ArrayMappedEntryValueParserRuleCall_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getArrayMappedEntryValueParserRuleCall_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ArrayMappedEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// BitFlagsEntryValue
protected class AbstractEntryValue_BitFlagsEntryValueParserRuleCall_20 extends RuleCallToken {
	
	public AbstractEntryValue_BitFlagsEntryValueParserRuleCall_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractEntryValueAccess().getBitFlagsEntryValueParserRuleCall_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsEntryValue_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitFlagsEntryValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BitFlagsEntryValue_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule AbstractEntryValue ****************/


/************ begin Rule NullObjectEntryValue ****************
 *
 * NullObjectEntryValue:
 * 	{NullObjectEntryValue} "null";
 *
 **/

// {NullObjectEntryValue} "null"
protected class NullObjectEntryValue_Group extends GroupToken {
	
	public NullObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNullObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NullObjectEntryValue_NullKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNullObjectEntryValueAccess().getNullObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {NullObjectEntryValue}
protected class NullObjectEntryValue_NullObjectEntryValueAction_0 extends ActionToken  {

	public NullObjectEntryValue_NullObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNullObjectEntryValueAccess().getNullObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "null"
protected class NullObjectEntryValue_NullKeyword_1 extends KeywordToken  {
	
	public NullObjectEntryValue_NullKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNullObjectEntryValueAccess().getNullKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NullObjectEntryValue_NullObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule NullObjectEntryValue ****************/


/************ begin Rule NameObjectEntryValue ****************
 *
 * NameObjectEntryValue:
 * 	{NameObjectEntryValue} "name" (hasMustBe?="must-be" requiredValue=NAME_OBJECT | hasDefault?="default"
 * 	defaultValue=NAME_OBJECT)?;
 *
 **/

// {NameObjectEntryValue} "name" (hasMustBe?="must-be" requiredValue=NAME_OBJECT | hasDefault?="default"
// defaultValue=NAME_OBJECT)?
protected class NameObjectEntryValue_Group extends GroupToken {
	
	public NameObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameObjectEntryValue_NameKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameObjectEntryValueAccess().getNameObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {NameObjectEntryValue}
protected class NameObjectEntryValue_NameObjectEntryValueAction_0 extends ActionToken  {

	public NameObjectEntryValue_NameObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getNameObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "name"
protected class NameObjectEntryValue_NameKeyword_1 extends KeywordToken  {
	
	public NameObjectEntryValue_NameKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getNameKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_NameObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (hasMustBe?="must-be" requiredValue=NAME_OBJECT | hasDefault?="default" defaultValue=NAME_OBJECT)?
protected class NameObjectEntryValue_Alternatives_2 extends AlternativesToken {

	public NameObjectEntryValue_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameObjectEntryValue_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=NAME_OBJECT
protected class NameObjectEntryValue_Group_2_0 extends GroupToken {
	
	public NameObjectEntryValue_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_RequiredValueAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class NameObjectEntryValue_HasMustBeAssignment_2_0_0 extends AssignmentToken  {
	
	public NameObjectEntryValue_HasMustBeAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getHasMustBeAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_NameKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNameObjectEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=NAME_OBJECT
protected class NameObjectEntryValue_RequiredValueAssignment_2_0_1 extends AssignmentToken  {
	
	public NameObjectEntryValue_RequiredValueAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getRequiredValueAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_HasMustBeAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameObjectEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameObjectEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// hasDefault?="default" defaultValue=NAME_OBJECT
protected class NameObjectEntryValue_Group_2_1 extends GroupToken {
	
	public NameObjectEntryValue_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_DefaultValueAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class NameObjectEntryValue_HasDefaultAssignment_2_1_0 extends AssignmentToken  {
	
	public NameObjectEntryValue_HasDefaultAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getHasDefaultAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_NameKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNameObjectEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=NAME_OBJECT
protected class NameObjectEntryValue_DefaultValueAssignment_2_1_1 extends AssignmentToken  {
	
	public NameObjectEntryValue_DefaultValueAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameObjectEntryValueAccess().getDefaultValueAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameObjectEntryValue_HasDefaultAssignment_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameObjectEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameObjectEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule NameObjectEntryValue ****************/


/************ begin Rule NumberObjectEntryValue ****************
 *
 * NumberObjectEntryValue:
 * 	{NumberObjectEntryValue} "num" ("[" rule=NumberValidationRule "]")? (hasMustBe?="must-be" requiredValue=NumberLiteral
 * 	| hasDefault?="default" defaultValue=NumberLiteral)?;
 *
 **/

// {NumberObjectEntryValue} "num" ("[" rule=NumberValidationRule "]")? (hasMustBe?="must-be" requiredValue=NumberLiteral |
// hasDefault?="default" defaultValue=NumberLiteral)?
protected class NumberObjectEntryValue_Group extends GroupToken {
	
	public NumberObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberObjectEntryValue_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new NumberObjectEntryValue_NumKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberObjectEntryValueAccess().getNumberObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {NumberObjectEntryValue}
protected class NumberObjectEntryValue_NumberObjectEntryValueAction_0 extends ActionToken  {

	public NumberObjectEntryValue_NumberObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getNumberObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "num"
protected class NumberObjectEntryValue_NumKeyword_1 extends KeywordToken  {
	
	public NumberObjectEntryValue_NumKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getNumKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_NumberObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("[" rule=NumberValidationRule "]")?
protected class NumberObjectEntryValue_Group_2 extends GroupToken {
	
	public NumberObjectEntryValue_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_RightSquareBracketKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class NumberObjectEntryValue_LeftSquareBracketKeyword_2_0 extends KeywordToken  {
	
	public NumberObjectEntryValue_LeftSquareBracketKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getLeftSquareBracketKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_NumKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rule=NumberValidationRule
protected class NumberObjectEntryValue_RuleAssignment_2_1 extends AssignmentToken  {
	
	public NumberObjectEntryValue_RuleAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getRuleAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValidationRule_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rule",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rule");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberValidationRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberObjectEntryValueAccess().getRuleNumberValidationRuleParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberObjectEntryValue_LeftSquareBracketKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class NumberObjectEntryValue_RightSquareBracketKeyword_2_2 extends KeywordToken  {
	
	public NumberObjectEntryValue_RightSquareBracketKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getRightSquareBracketKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_RuleAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (hasMustBe?="must-be" requiredValue=NumberLiteral | hasDefault?="default" defaultValue=NumberLiteral)?
protected class NumberObjectEntryValue_Alternatives_3 extends AlternativesToken {

	public NumberObjectEntryValue_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberObjectEntryValue_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=NumberLiteral
protected class NumberObjectEntryValue_Group_3_0 extends GroupToken {
	
	public NumberObjectEntryValue_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_RequiredValueAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class NumberObjectEntryValue_HasMustBeAssignment_3_0_0 extends AssignmentToken  {
	
	public NumberObjectEntryValue_HasMustBeAssignment_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getHasMustBeAssignment_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberObjectEntryValue_NumKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNumberObjectEntryValueAccess().getHasMustBeMustBeKeyword_3_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=NumberLiteral
protected class NumberObjectEntryValue_RequiredValueAssignment_3_0_1 extends AssignmentToken  {
	
	public NumberObjectEntryValue_RequiredValueAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getRequiredValueAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberObjectEntryValueAccess().getRequiredValueNumberLiteralParserRuleCall_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberObjectEntryValue_HasMustBeAssignment_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// hasDefault?="default" defaultValue=NumberLiteral
protected class NumberObjectEntryValue_Group_3_1 extends GroupToken {
	
	public NumberObjectEntryValue_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_DefaultValueAssignment_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class NumberObjectEntryValue_HasDefaultAssignment_3_1_0 extends AssignmentToken  {
	
	public NumberObjectEntryValue_HasDefaultAssignment_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getHasDefaultAssignment_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberObjectEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberObjectEntryValue_NumKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNumberObjectEntryValueAccess().getHasDefaultDefaultKeyword_3_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=NumberLiteral
protected class NumberObjectEntryValue_DefaultValueAssignment_3_1_1 extends AssignmentToken  {
	
	public NumberObjectEntryValue_DefaultValueAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberObjectEntryValueAccess().getDefaultValueAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberObjectEntryValueAccess().getDefaultValueNumberLiteralParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberObjectEntryValue_HasDefaultAssignment_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule NumberObjectEntryValue ****************/


/************ begin Rule NumberValidationRule ****************
 *
 * NumberValidationRule:
 * 	NumberInclusiveRangeValidationRule | NumberGreaterValidationRule | NumberGreaterEqualsValidationRule |
 * 	NumberValuesValidationRule;
 *
 **/

// NumberInclusiveRangeValidationRule | NumberGreaterValidationRule | NumberGreaterEqualsValidationRule |
// NumberValuesValidationRule
protected class NumberValidationRule_Alternatives extends AlternativesToken {

	public NumberValidationRule_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNumberValidationRuleAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValidationRule_NumberInclusiveRangeValidationRuleParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberValidationRule_NumberGreaterValidationRuleParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new NumberValidationRule_NumberGreaterEqualsValidationRuleParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new NumberValidationRule_NumberValuesValidationRuleParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberGreaterEqualsValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNumberGreaterValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNumberInclusiveRangeValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNumberValuesValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// NumberInclusiveRangeValidationRule
protected class NumberValidationRule_NumberInclusiveRangeValidationRuleParserRuleCall_0 extends RuleCallToken {
	
	public NumberValidationRule_NumberInclusiveRangeValidationRuleParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberValidationRuleAccess().getNumberInclusiveRangeValidationRuleParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberInclusiveRangeValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberInclusiveRangeValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberInclusiveRangeValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NumberGreaterValidationRule
protected class NumberValidationRule_NumberGreaterValidationRuleParserRuleCall_1 extends RuleCallToken {
	
	public NumberValidationRule_NumberGreaterValidationRuleParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberValidationRuleAccess().getNumberGreaterValidationRuleParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberGreaterValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberGreaterValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberGreaterValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NumberGreaterEqualsValidationRule
protected class NumberValidationRule_NumberGreaterEqualsValidationRuleParserRuleCall_2 extends RuleCallToken {
	
	public NumberValidationRule_NumberGreaterEqualsValidationRuleParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberValidationRuleAccess().getNumberGreaterEqualsValidationRuleParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberGreaterEqualsValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberGreaterEqualsValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberGreaterEqualsValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NumberValuesValidationRule
protected class NumberValidationRule_NumberValuesValidationRuleParserRuleCall_3 extends RuleCallToken {
	
	public NumberValidationRule_NumberValuesValidationRuleParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberValidationRuleAccess().getNumberValuesValidationRuleParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberValuesValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NumberValuesValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule NumberValidationRule ****************/


/************ begin Rule NumberInclusiveRangeValidationRule ****************
 *
 * NumberInclusiveRangeValidationRule:
 * 	"range-incl" lowerBound=NumberLiteral "to" upperBound=NumberLiteral;
 *
 **/

// "range-incl" lowerBound=NumberLiteral "to" upperBound=NumberLiteral
protected class NumberInclusiveRangeValidationRule_Group extends GroupToken {
	
	public NumberInclusiveRangeValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberInclusiveRangeValidationRule_UpperBoundAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberInclusiveRangeValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "range-incl"
protected class NumberInclusiveRangeValidationRule_RangeInclKeyword_0 extends KeywordToken  {
	
	public NumberInclusiveRangeValidationRule_RangeInclKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getRangeInclKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// lowerBound=NumberLiteral
protected class NumberInclusiveRangeValidationRule_LowerBoundAssignment_1 extends AssignmentToken  {
	
	public NumberInclusiveRangeValidationRule_LowerBoundAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getLowerBoundAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getLowerBoundNumberLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberInclusiveRangeValidationRule_RangeInclKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "to"
protected class NumberInclusiveRangeValidationRule_ToKeyword_2 extends KeywordToken  {
	
	public NumberInclusiveRangeValidationRule_ToKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getToKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberInclusiveRangeValidationRule_LowerBoundAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=NumberLiteral
protected class NumberInclusiveRangeValidationRule_UpperBoundAssignment_3 extends AssignmentToken  {
	
	public NumberInclusiveRangeValidationRule_UpperBoundAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getUpperBoundAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberInclusiveRangeValidationRuleAccess().getUpperBoundNumberLiteralParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberInclusiveRangeValidationRule_ToKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule NumberInclusiveRangeValidationRule ****************/


/************ begin Rule NumberGreaterValidationRule ****************
 *
 * NumberGreaterValidationRule:
 * 	"greater" minValue=NumberLiteral;
 *
 **/

// "greater" minValue=NumberLiteral
protected class NumberGreaterValidationRule_Group extends GroupToken {
	
	public NumberGreaterValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberGreaterValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberGreaterValidationRule_MinValueAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberGreaterValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "greater"
protected class NumberGreaterValidationRule_GreaterKeyword_0 extends KeywordToken  {
	
	public NumberGreaterValidationRule_GreaterKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberGreaterValidationRuleAccess().getGreaterKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// minValue=NumberLiteral
protected class NumberGreaterValidationRule_MinValueAssignment_1 extends AssignmentToken  {
	
	public NumberGreaterValidationRule_MinValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberGreaterValidationRuleAccess().getMinValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberGreaterValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberGreaterValidationRule_GreaterKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule NumberGreaterValidationRule ****************/


/************ begin Rule NumberGreaterEqualsValidationRule ****************
 *
 * NumberGreaterEqualsValidationRule:
 * 	"greater-equals" minValue=NumberLiteral;
 *
 **/

// "greater-equals" minValue=NumberLiteral
protected class NumberGreaterEqualsValidationRule_Group extends GroupToken {
	
	public NumberGreaterEqualsValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberGreaterEqualsValidationRule_MinValueAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberGreaterEqualsValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "greater-equals"
protected class NumberGreaterEqualsValidationRule_GreaterEqualsKeyword_0 extends KeywordToken  {
	
	public NumberGreaterEqualsValidationRule_GreaterEqualsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getGreaterEqualsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// minValue=NumberLiteral
protected class NumberGreaterEqualsValidationRule_MinValueAssignment_1 extends AssignmentToken  {
	
	public NumberGreaterEqualsValidationRule_MinValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getMinValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberGreaterEqualsValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberGreaterEqualsValidationRule_GreaterEqualsKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule NumberGreaterEqualsValidationRule ****************/


/************ begin Rule NumberValuesValidationRule ****************
 *
 * NumberValuesValidationRule:
 * 	"values" value+=NumberValuesValidationRuleEntry ("," value+=NumberValuesValidationRuleEntry)*;
 *
 **/

// "values" value+=NumberValuesValidationRuleEntry ("," value+=NumberValuesValidationRuleEntry)*
protected class NumberValuesValidationRule_Group extends GroupToken {
	
	public NumberValuesValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRule_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberValuesValidationRule_ValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberValuesValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "values"
protected class NumberValuesValidationRule_ValuesKeyword_0 extends KeywordToken  {
	
	public NumberValuesValidationRule_ValuesKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getValuesKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// value+=NumberValuesValidationRuleEntry
protected class NumberValuesValidationRule_ValueAssignment_1 extends AssignmentToken  {
	
	public NumberValuesValidationRule_ValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberValuesValidationRuleEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberValuesValidationRuleAccess().getValueNumberValuesValidationRuleEntryParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberValuesValidationRule_ValuesKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," value+=NumberValuesValidationRuleEntry)*
protected class NumberValuesValidationRule_Group_2 extends GroupToken {
	
	public NumberValuesValidationRule_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRule_ValueAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class NumberValuesValidationRule_CommaKeyword_2_0 extends KeywordToken  {
	
	public NumberValuesValidationRule_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRule_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberValuesValidationRule_ValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// value+=NumberValuesValidationRuleEntry
protected class NumberValuesValidationRule_ValueAssignment_2_1 extends AssignmentToken  {
	
	public NumberValuesValidationRule_ValueAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleAccess().getValueAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberValuesValidationRuleEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberValuesValidationRuleAccess().getValueNumberValuesValidationRuleEntryParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new NumberValuesValidationRule_CommaKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule NumberValuesValidationRule ****************/


/************ begin Rule NumberValuesValidationRuleEntry ****************
 *
 * NumberValuesValidationRuleEntry:
 * 	value=NumberLiteral ("(" since=SinceVersion ")")?;
 *
 **/

// value=NumberLiteral ("(" since=SinceVersion ")")?
protected class NumberValuesValidationRuleEntry_Group extends GroupToken {
	
	public NumberValuesValidationRuleEntry_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberValuesValidationRuleEntry_ValueAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberValuesValidationRuleEntryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=NumberLiteral
protected class NumberValuesValidationRuleEntry_ValueAssignment_0 extends AssignmentToken  {
	
	public NumberValuesValidationRuleEntry_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNumberValuesValidationRuleEntryAccess().getValueNumberLiteralParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// ("(" since=SinceVersion ")")?
protected class NumberValuesValidationRuleEntry_Group_1 extends GroupToken {
	
	public NumberValuesValidationRuleEntry_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_RightParenthesisKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class NumberValuesValidationRuleEntry_LeftParenthesisKeyword_1_0 extends KeywordToken  {
	
	public NumberValuesValidationRuleEntry_LeftParenthesisKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getLeftParenthesisKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class NumberValuesValidationRuleEntry_SinceAssignment_1_1 extends AssignmentToken  {
	
	public NumberValuesValidationRuleEntry_SinceAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getSinceAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_LeftParenthesisKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getNumberValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getNumberValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class NumberValuesValidationRuleEntry_RightParenthesisKeyword_1_2 extends KeywordToken  {
	
	public NumberValuesValidationRuleEntry_RightParenthesisKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberValuesValidationRuleEntryAccess().getRightParenthesisKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberValuesValidationRuleEntry_SinceAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule NumberValuesValidationRuleEntry ****************/


/************ begin Rule IntegerObjectEntryValue ****************
 *
 * IntegerObjectEntryValue:
 * 	{IntegerObjectEntryValue} "int" ("[" rule=IntegerValidationRule "]")? (hasMustBe?="must-be" requiredValue=IntLiteral
 * 	| hasDefault?="default" defaultValue=IntLiteral)?;
 *
 **/

// {IntegerObjectEntryValue} "int" ("[" rule=IntegerValidationRule "]")? (hasMustBe?="must-be" requiredValue=IntLiteral |
// hasDefault?="default" defaultValue=IntLiteral)?
protected class IntegerObjectEntryValue_Group extends GroupToken {
	
	public IntegerObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerObjectEntryValue_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new IntegerObjectEntryValue_IntKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerObjectEntryValueAccess().getIntegerObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {IntegerObjectEntryValue}
protected class IntegerObjectEntryValue_IntegerObjectEntryValueAction_0 extends ActionToken  {

	public IntegerObjectEntryValue_IntegerObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getIntegerObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "int"
protected class IntegerObjectEntryValue_IntKeyword_1 extends KeywordToken  {
	
	public IntegerObjectEntryValue_IntKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getIntKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_IntegerObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("[" rule=IntegerValidationRule "]")?
protected class IntegerObjectEntryValue_Group_2 extends GroupToken {
	
	public IntegerObjectEntryValue_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_RightSquareBracketKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class IntegerObjectEntryValue_LeftSquareBracketKeyword_2_0 extends KeywordToken  {
	
	public IntegerObjectEntryValue_LeftSquareBracketKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getLeftSquareBracketKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_IntKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rule=IntegerValidationRule
protected class IntegerObjectEntryValue_RuleAssignment_2_1 extends AssignmentToken  {
	
	public IntegerObjectEntryValue_RuleAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getRuleAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValidationRule_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rule",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rule");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntegerValidationRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerObjectEntryValueAccess().getRuleIntegerValidationRuleParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerObjectEntryValue_LeftSquareBracketKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class IntegerObjectEntryValue_RightSquareBracketKeyword_2_2 extends KeywordToken  {
	
	public IntegerObjectEntryValue_RightSquareBracketKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getRightSquareBracketKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_RuleAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (hasMustBe?="must-be" requiredValue=IntLiteral | hasDefault?="default" defaultValue=IntLiteral)?
protected class IntegerObjectEntryValue_Alternatives_3 extends AlternativesToken {

	public IntegerObjectEntryValue_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerObjectEntryValue_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=IntLiteral
protected class IntegerObjectEntryValue_Group_3_0 extends GroupToken {
	
	public IntegerObjectEntryValue_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_RequiredValueAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class IntegerObjectEntryValue_HasMustBeAssignment_3_0_0 extends AssignmentToken  {
	
	public IntegerObjectEntryValue_HasMustBeAssignment_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getHasMustBeAssignment_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerObjectEntryValue_IntKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getIntegerObjectEntryValueAccess().getHasMustBeMustBeKeyword_3_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=IntLiteral
protected class IntegerObjectEntryValue_RequiredValueAssignment_3_0_1 extends AssignmentToken  {
	
	public IntegerObjectEntryValue_RequiredValueAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getRequiredValueAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerObjectEntryValueAccess().getRequiredValueIntLiteralParserRuleCall_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerObjectEntryValue_HasMustBeAssignment_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// hasDefault?="default" defaultValue=IntLiteral
protected class IntegerObjectEntryValue_Group_3_1 extends GroupToken {
	
	public IntegerObjectEntryValue_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_DefaultValueAssignment_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class IntegerObjectEntryValue_HasDefaultAssignment_3_1_0 extends AssignmentToken  {
	
	public IntegerObjectEntryValue_HasDefaultAssignment_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getHasDefaultAssignment_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerObjectEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerObjectEntryValue_IntKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getIntegerObjectEntryValueAccess().getHasDefaultDefaultKeyword_3_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=IntLiteral
protected class IntegerObjectEntryValue_DefaultValueAssignment_3_1_1 extends AssignmentToken  {
	
	public IntegerObjectEntryValue_DefaultValueAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerObjectEntryValueAccess().getDefaultValueAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerObjectEntryValueAccess().getDefaultValueIntLiteralParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerObjectEntryValue_HasDefaultAssignment_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule IntegerObjectEntryValue ****************/


/************ begin Rule IntegerValidationRule ****************
 *
 * IntegerValidationRule:
 * 	IntegerInclusiveRangeValidationRule | IntegerValuesValidationRule | IntegerGreaterValidationRule |
 * 	IntegerGreaterEqualsValidationRule;
 *
 **/

// IntegerInclusiveRangeValidationRule | IntegerValuesValidationRule | IntegerGreaterValidationRule |
// IntegerGreaterEqualsValidationRule
protected class IntegerValidationRule_Alternatives extends AlternativesToken {

	public IntegerValidationRule_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getIntegerValidationRuleAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValidationRule_IntegerInclusiveRangeValidationRuleParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerValidationRule_IntegerValuesValidationRuleParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new IntegerValidationRule_IntegerGreaterValidationRuleParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new IntegerValidationRule_IntegerGreaterEqualsValidationRuleParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerGreaterEqualsValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerGreaterValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerInclusiveRangeValidationRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerValuesValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// IntegerInclusiveRangeValidationRule
protected class IntegerValidationRule_IntegerInclusiveRangeValidationRuleParserRuleCall_0 extends RuleCallToken {
	
	public IntegerValidationRule_IntegerInclusiveRangeValidationRuleParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIntegerValidationRuleAccess().getIntegerInclusiveRangeValidationRuleParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerInclusiveRangeValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerInclusiveRangeValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerInclusiveRangeValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerValuesValidationRule
protected class IntegerValidationRule_IntegerValuesValidationRuleParserRuleCall_1 extends RuleCallToken {
	
	public IntegerValidationRule_IntegerValuesValidationRuleParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIntegerValidationRuleAccess().getIntegerValuesValidationRuleParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerValuesValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerValuesValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerGreaterValidationRule
protected class IntegerValidationRule_IntegerGreaterValidationRuleParserRuleCall_2 extends RuleCallToken {
	
	public IntegerValidationRule_IntegerGreaterValidationRuleParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIntegerValidationRuleAccess().getIntegerGreaterValidationRuleParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerGreaterValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerGreaterValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerGreaterValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerGreaterEqualsValidationRule
protected class IntegerValidationRule_IntegerGreaterEqualsValidationRuleParserRuleCall_3 extends RuleCallToken {
	
	public IntegerValidationRule_IntegerGreaterEqualsValidationRuleParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIntegerValidationRuleAccess().getIntegerGreaterEqualsValidationRuleParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerGreaterEqualsValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerGreaterEqualsValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerGreaterEqualsValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule IntegerValidationRule ****************/


/************ begin Rule IntegerInclusiveRangeValidationRule ****************
 *
 * IntegerInclusiveRangeValidationRule:
 * 	"range-incl" lowerBound=IntLiteral "to" upperBound=IntLiteral;
 *
 **/

// "range-incl" lowerBound=IntLiteral "to" upperBound=IntLiteral
protected class IntegerInclusiveRangeValidationRule_Group extends GroupToken {
	
	public IntegerInclusiveRangeValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerInclusiveRangeValidationRule_UpperBoundAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerInclusiveRangeValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "range-incl"
protected class IntegerInclusiveRangeValidationRule_RangeInclKeyword_0 extends KeywordToken  {
	
	public IntegerInclusiveRangeValidationRule_RangeInclKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getRangeInclKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// lowerBound=IntLiteral
protected class IntegerInclusiveRangeValidationRule_LowerBoundAssignment_1 extends AssignmentToken  {
	
	public IntegerInclusiveRangeValidationRule_LowerBoundAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getLowerBoundAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getLowerBoundIntLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerInclusiveRangeValidationRule_RangeInclKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "to"
protected class IntegerInclusiveRangeValidationRule_ToKeyword_2 extends KeywordToken  {
	
	public IntegerInclusiveRangeValidationRule_ToKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getToKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerInclusiveRangeValidationRule_LowerBoundAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=IntLiteral
protected class IntegerInclusiveRangeValidationRule_UpperBoundAssignment_3 extends AssignmentToken  {
	
	public IntegerInclusiveRangeValidationRule_UpperBoundAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getUpperBoundAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerInclusiveRangeValidationRuleAccess().getUpperBoundIntLiteralParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerInclusiveRangeValidationRule_ToKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule IntegerInclusiveRangeValidationRule ****************/


/************ begin Rule IntegerValuesValidationRule ****************
 *
 * IntegerValuesValidationRule:
 * 	"values" value+=IntegerValuesValidationRuleEntry ("," value+=IntegerValuesValidationRuleEntry)*;
 *
 **/

// "values" value+=IntegerValuesValidationRuleEntry ("," value+=IntegerValuesValidationRuleEntry)*
protected class IntegerValuesValidationRule_Group extends GroupToken {
	
	public IntegerValuesValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRule_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerValuesValidationRule_ValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerValuesValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "values"
protected class IntegerValuesValidationRule_ValuesKeyword_0 extends KeywordToken  {
	
	public IntegerValuesValidationRule_ValuesKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getValuesKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// value+=IntegerValuesValidationRuleEntry
protected class IntegerValuesValidationRule_ValueAssignment_1 extends AssignmentToken  {
	
	public IntegerValuesValidationRule_ValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntegerValuesValidationRuleEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerValuesValidationRuleAccess().getValueIntegerValuesValidationRuleEntryParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerValuesValidationRule_ValuesKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," value+=IntegerValuesValidationRuleEntry)*
protected class IntegerValuesValidationRule_Group_2 extends GroupToken {
	
	public IntegerValuesValidationRule_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRule_ValueAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class IntegerValuesValidationRule_CommaKeyword_2_0 extends KeywordToken  {
	
	public IntegerValuesValidationRule_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRule_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerValuesValidationRule_ValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// value+=IntegerValuesValidationRuleEntry
protected class IntegerValuesValidationRule_ValueAssignment_2_1 extends AssignmentToken  {
	
	public IntegerValuesValidationRule_ValueAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleAccess().getValueAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntegerValuesValidationRuleEntryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerValuesValidationRuleAccess().getValueIntegerValuesValidationRuleEntryParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerValuesValidationRule_CommaKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule IntegerValuesValidationRule ****************/


/************ begin Rule IntegerGreaterValidationRule ****************
 *
 * IntegerGreaterValidationRule:
 * 	"greater" minValue=IntLiteral;
 *
 **/

// "greater" minValue=IntLiteral
protected class IntegerGreaterValidationRule_Group extends GroupToken {
	
	public IntegerGreaterValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerGreaterValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerGreaterValidationRule_MinValueAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerGreaterValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "greater"
protected class IntegerGreaterValidationRule_GreaterKeyword_0 extends KeywordToken  {
	
	public IntegerGreaterValidationRule_GreaterKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerGreaterValidationRuleAccess().getGreaterKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// minValue=IntLiteral
protected class IntegerGreaterValidationRule_MinValueAssignment_1 extends AssignmentToken  {
	
	public IntegerGreaterValidationRule_MinValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerGreaterValidationRuleAccess().getMinValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerGreaterValidationRuleAccess().getMinValueIntLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerGreaterValidationRule_GreaterKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule IntegerGreaterValidationRule ****************/


/************ begin Rule IntegerGreaterEqualsValidationRule ****************
 *
 * IntegerGreaterEqualsValidationRule:
 * 	"greater-equals" minValue=NumberLiteral;
 *
 **/

// "greater-equals" minValue=NumberLiteral
protected class IntegerGreaterEqualsValidationRule_Group extends GroupToken {
	
	public IntegerGreaterEqualsValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerGreaterEqualsValidationRule_MinValueAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerGreaterEqualsValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "greater-equals"
protected class IntegerGreaterEqualsValidationRule_GreaterEqualsKeyword_0 extends KeywordToken  {
	
	public IntegerGreaterEqualsValidationRule_GreaterEqualsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getGreaterEqualsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// minValue=NumberLiteral
protected class IntegerGreaterEqualsValidationRule_MinValueAssignment_1 extends AssignmentToken  {
	
	public IntegerGreaterEqualsValidationRule_MinValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getMinValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumberLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerGreaterEqualsValidationRuleAccess().getMinValueNumberLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new IntegerGreaterEqualsValidationRule_GreaterEqualsKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule IntegerGreaterEqualsValidationRule ****************/


/************ begin Rule IntegerValuesValidationRuleEntry ****************
 *
 * IntegerValuesValidationRuleEntry:
 * 	value=IntLiteral ("(" since=SinceVersion ")")?;
 *
 **/

// value=IntLiteral ("(" since=SinceVersion ")")?
protected class IntegerValuesValidationRuleEntry_Group extends GroupToken {
	
	public IntegerValuesValidationRuleEntry_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerValuesValidationRuleEntry_ValueAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerValuesValidationRuleEntryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=IntLiteral
protected class IntegerValuesValidationRuleEntry_ValueAssignment_0 extends AssignmentToken  {
	
	public IntegerValuesValidationRuleEntry_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getIntegerValuesValidationRuleEntryAccess().getValueIntLiteralParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// ("(" since=SinceVersion ")")?
protected class IntegerValuesValidationRuleEntry_Group_1 extends GroupToken {
	
	public IntegerValuesValidationRuleEntry_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_RightParenthesisKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class IntegerValuesValidationRuleEntry_LeftParenthesisKeyword_1_0 extends KeywordToken  {
	
	public IntegerValuesValidationRuleEntry_LeftParenthesisKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getLeftParenthesisKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// since=SinceVersion
protected class IntegerValuesValidationRuleEntry_SinceAssignment_1_1 extends AssignmentToken  {
	
	public IntegerValuesValidationRuleEntry_SinceAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getSinceAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_LeftParenthesisKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("since",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("since");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getIntegerValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getIntegerValuesValidationRuleEntryAccess().getSinceSinceVersionEnumRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class IntegerValuesValidationRuleEntry_RightParenthesisKeyword_1_2 extends KeywordToken  {
	
	public IntegerValuesValidationRuleEntry_RightParenthesisKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValuesValidationRuleEntryAccess().getRightParenthesisKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValuesValidationRuleEntry_SinceAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule IntegerValuesValidationRuleEntry ****************/


/************ begin Rule RealObjectEntryValue ****************
 *
 * RealObjectEntryValue:
 * 	{RealObjectEntryValue} "real" (hasMustBe?="must-be" requiredValue=RealLiteral | hasDefault?="default"
 * 	defaultValue=RealLiteral)?;
 *
 **/

// {RealObjectEntryValue} "real" (hasMustBe?="must-be" requiredValue=RealLiteral | hasDefault?="default"
// defaultValue=RealLiteral)?
protected class RealObjectEntryValue_Group extends GroupToken {
	
	public RealObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RealObjectEntryValue_RealKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRealObjectEntryValueAccess().getRealObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {RealObjectEntryValue}
protected class RealObjectEntryValue_RealObjectEntryValueAction_0 extends ActionToken  {

	public RealObjectEntryValue_RealObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getRealObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "real"
protected class RealObjectEntryValue_RealKeyword_1 extends KeywordToken  {
	
	public RealObjectEntryValue_RealKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getRealKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_RealObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (hasMustBe?="must-be" requiredValue=RealLiteral | hasDefault?="default" defaultValue=RealLiteral)?
protected class RealObjectEntryValue_Alternatives_2 extends AlternativesToken {

	public RealObjectEntryValue_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RealObjectEntryValue_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=RealLiteral
protected class RealObjectEntryValue_Group_2_0 extends GroupToken {
	
	public RealObjectEntryValue_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_RequiredValueAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class RealObjectEntryValue_HasMustBeAssignment_2_0_0 extends AssignmentToken  {
	
	public RealObjectEntryValue_HasMustBeAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getHasMustBeAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_RealKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getRealObjectEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=RealLiteral
protected class RealObjectEntryValue_RequiredValueAssignment_2_0_1 extends AssignmentToken  {
	
	public RealObjectEntryValue_RequiredValueAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getRequiredValueAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRealObjectEntryValueAccess().getRequiredValueRealLiteralParserRuleCall_2_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RealObjectEntryValue_HasMustBeAssignment_2_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// hasDefault?="default" defaultValue=RealLiteral
protected class RealObjectEntryValue_Group_2_1 extends GroupToken {
	
	public RealObjectEntryValue_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_DefaultValueAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class RealObjectEntryValue_HasDefaultAssignment_2_1_0 extends AssignmentToken  {
	
	public RealObjectEntryValue_HasDefaultAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getHasDefaultAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealObjectEntryValue_RealKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getRealObjectEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=RealLiteral
protected class RealObjectEntryValue_DefaultValueAssignment_2_1_1 extends AssignmentToken  {
	
	public RealObjectEntryValue_DefaultValueAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealObjectEntryValueAccess().getDefaultValueAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRealObjectEntryValueAccess().getDefaultValueRealLiteralParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RealObjectEntryValue_HasDefaultAssignment_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule RealObjectEntryValue ****************/


/************ begin Rule NameTreeEntryValue ****************
 *
 * NameTreeEntryValue:
 * 	{NameTreeEntryValue} "name-tree";
 *
 **/

// {NameTreeEntryValue} "name-tree"
protected class NameTreeEntryValue_Group extends GroupToken {
	
	public NameTreeEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameTreeEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameTreeEntryValue_NameTreeKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameTreeEntryValueAccess().getNameTreeEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {NameTreeEntryValue}
protected class NameTreeEntryValue_NameTreeEntryValueAction_0 extends ActionToken  {

	public NameTreeEntryValue_NameTreeEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNameTreeEntryValueAccess().getNameTreeEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "name-tree"
protected class NameTreeEntryValue_NameTreeKeyword_1 extends KeywordToken  {
	
	public NameTreeEntryValue_NameTreeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameTreeEntryValueAccess().getNameTreeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameTreeEntryValue_NameTreeEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule NameTreeEntryValue ****************/


/************ begin Rule NumberTreeEntryValue ****************
 *
 * NumberTreeEntryValue:
 * 	{NumberTreeEntryValue} "number-tree";
 *
 **/

// {NumberTreeEntryValue} "number-tree"
protected class NumberTreeEntryValue_Group extends GroupToken {
	
	public NumberTreeEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNumberTreeEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberTreeEntryValue_NumberTreeKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {NumberTreeEntryValue}
protected class NumberTreeEntryValue_NumberTreeEntryValueAction_0 extends ActionToken  {

	public NumberTreeEntryValue_NumberTreeEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "number-tree"
protected class NumberTreeEntryValue_NumberTreeKeyword_1 extends KeywordToken  {
	
	public NumberTreeEntryValue_NumberTreeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNumberTreeEntryValueAccess().getNumberTreeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberTreeEntryValue_NumberTreeEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule NumberTreeEntryValue ****************/


/************ begin Rule ArrayEntryValue ****************
 *
 * ArrayEntryValue:
 * 	"array" ("[" rule=ArrayValidationRule "]")? "<" indirectReference=IndirectReference? type=AbstractEntryValue
 * 	requiresCustomValidation?="custom-validation"? requiresCustomDefault?="custom-default"? ">";
 *
 **/

// "array" ("[" rule=ArrayValidationRule "]")? "<" indirectReference=IndirectReference? type=AbstractEntryValue
// requiresCustomValidation?="custom-validation"? requiresCustomDefault?="custom-default"? ">"
protected class ArrayEntryValue_Group extends GroupToken {
	
	public ArrayEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_GreaterThanSignKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "array"
protected class ArrayEntryValue_ArrayKeyword_0 extends KeywordToken  {
	
	public ArrayEntryValue_ArrayKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getArrayKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ("[" rule=ArrayValidationRule "]")?
protected class ArrayEntryValue_Group_1 extends GroupToken {
	
	public ArrayEntryValue_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_RightSquareBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class ArrayEntryValue_LeftSquareBracketKeyword_1_0 extends KeywordToken  {
	
	public ArrayEntryValue_LeftSquareBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getLeftSquareBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_ArrayKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rule=ArrayValidationRule
protected class ArrayEntryValue_RuleAssignment_1_1 extends AssignmentToken  {
	
	public ArrayEntryValue_RuleAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getRuleAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayValidationRule_ArrayLengthValidationRuleParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rule",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rule");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArrayValidationRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArrayEntryValueAccess().getRuleArrayValidationRuleParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArrayEntryValue_LeftSquareBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class ArrayEntryValue_RightSquareBracketKeyword_1_2 extends KeywordToken  {
	
	public ArrayEntryValue_RightSquareBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getRightSquareBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_RuleAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "<"
protected class ArrayEntryValue_LessThanSignKeyword_2 extends KeywordToken  {
	
	public ArrayEntryValue_LessThanSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getLessThanSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayEntryValue_ArrayKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// indirectReference=IndirectReference?
protected class ArrayEntryValue_IndirectReferenceAssignment_3 extends AssignmentToken  {
	
	public ArrayEntryValue_IndirectReferenceAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getIndirectReferenceAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_LessThanSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("indirectReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("indirectReference");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getArrayEntryValueAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getArrayEntryValueAccess().getIndirectReferenceIndirectReferenceEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// type=AbstractEntryValue
protected class ArrayEntryValue_TypeAssignment_4 extends AssignmentToken  {
	
	public ArrayEntryValue_TypeAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getTypeAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArrayEntryValueAccess().getTypeAbstractEntryValueParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArrayEntryValue_IndirectReferenceAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ArrayEntryValue_LessThanSignKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// requiresCustomValidation?="custom-validation"?
protected class ArrayEntryValue_RequiresCustomValidationAssignment_5 extends AssignmentToken  {
	
	public ArrayEntryValue_RequiresCustomValidationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getRequiresCustomValidationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_TypeAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomValidation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomValidation");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayEntryValueAccess().getRequiresCustomValidationCustomValidationKeyword_5_0();
			return obj;
		}
		return null;
	}

}

// requiresCustomDefault?="custom-default"?
protected class ArrayEntryValue_RequiresCustomDefaultAssignment_6 extends AssignmentToken  {
	
	public ArrayEntryValue_RequiresCustomDefaultAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getRequiresCustomDefaultAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_RequiresCustomValidationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayEntryValue_TypeAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomDefault",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArrayEntryValueAccess().getRequiresCustomDefaultCustomDefaultKeyword_6_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class ArrayEntryValue_GreaterThanSignKeyword_7 extends KeywordToken  {
	
	public ArrayEntryValue_GreaterThanSignKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayEntryValueAccess().getGreaterThanSignKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayEntryValue_RequiresCustomDefaultAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayEntryValue_RequiresCustomValidationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ArrayEntryValue_TypeAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule ArrayEntryValue ****************/


/************ begin Rule ArrayValidationRule ****************
 *
 * ArrayValidationRule:
 * 	ArrayLengthValidationRule;
 *
 **/

// ArrayLengthValidationRule
protected class ArrayValidationRule_ArrayLengthValidationRuleParserRuleCall extends RuleCallToken {
	
	public ArrayValidationRule_ArrayLengthValidationRuleParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getArrayValidationRuleAccess().getArrayLengthValidationRuleParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayLengthValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayLengthValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ArrayLengthValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule ArrayValidationRule ****************/


/************ begin Rule ArrayLengthValidationRule ****************
 *
 * ArrayLengthValidationRule:
 * 	"length" length=INT;
 *
 **/

// "length" length=INT
protected class ArrayLengthValidationRule_Group extends GroupToken {
	
	public ArrayLengthValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayLengthValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayLengthValidationRule_LengthAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayLengthValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "length"
protected class ArrayLengthValidationRule_LengthKeyword_0 extends KeywordToken  {
	
	public ArrayLengthValidationRule_LengthKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayLengthValidationRuleAccess().getLengthKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// length=INT
protected class ArrayLengthValidationRule_LengthAssignment_1 extends AssignmentToken  {
	
	public ArrayLengthValidationRule_LengthAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayLengthValidationRuleAccess().getLengthAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayLengthValidationRule_LengthKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("length",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("length");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayLengthValidationRuleAccess().getLengthINTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getArrayLengthValidationRuleAccess().getLengthINTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ArrayLengthValidationRule ****************/


/************ begin Rule ObjectEntryValue ****************
 *
 * ObjectEntryValue:
 * 	"object" {ObjectEntryValue};
 *
 **/

// "object" {ObjectEntryValue}
protected class ObjectEntryValue_Group extends GroupToken {
	
	public ObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ObjectEntryValue_ObjectEntryValueAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getObjectEntryValueAccess().getObjectEntryValueAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "object"
protected class ObjectEntryValue_ObjectKeyword_0 extends KeywordToken  {
	
	public ObjectEntryValue_ObjectKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getObjectEntryValueAccess().getObjectKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {ObjectEntryValue}
protected class ObjectEntryValue_ObjectEntryValueAction_1 extends ActionToken  {

	public ObjectEntryValue_ObjectEntryValueAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getObjectEntryValueAccess().getObjectEntryValueAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ObjectEntryValue_ObjectKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}


/************ end Rule ObjectEntryValue ****************/


/************ begin Rule MappingDictEntryValue ****************
 *
 * MappingDictEntryValue:
 * 	"mapping-dict" "<" type=AbstractEntryValue requiresCustomValidation?="custom-validation"?
 * 	requiresCustomDefault?="custom-default"? ">";
 *
 **/

// "mapping-dict" "<" type=AbstractEntryValue requiresCustomValidation?="custom-validation"?
// requiresCustomDefault?="custom-default"? ">"
protected class MappingDictEntryValue_Group extends GroupToken {
	
	public MappingDictEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_GreaterThanSignKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMappingDictEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "mapping-dict"
protected class MappingDictEntryValue_MappingDictKeyword_0 extends KeywordToken  {
	
	public MappingDictEntryValue_MappingDictKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getMappingDictKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "<"
protected class MappingDictEntryValue_LessThanSignKeyword_1 extends KeywordToken  {
	
	public MappingDictEntryValue_LessThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getLessThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_MappingDictKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=AbstractEntryValue
protected class MappingDictEntryValue_TypeAssignment_2 extends AssignmentToken  {
	
	public MappingDictEntryValue_TypeAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getTypeAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMappingDictEntryValueAccess().getTypeAbstractEntryValueParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MappingDictEntryValue_LessThanSignKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// requiresCustomValidation?="custom-validation"?
protected class MappingDictEntryValue_RequiresCustomValidationAssignment_3 extends AssignmentToken  {
	
	public MappingDictEntryValue_RequiresCustomValidationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomValidationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_TypeAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomValidation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomValidation");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomValidationCustomValidationKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// requiresCustomDefault?="custom-default"?
protected class MappingDictEntryValue_RequiresCustomDefaultAssignment_4 extends AssignmentToken  {
	
	public MappingDictEntryValue_RequiresCustomDefaultAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomDefaultAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_RequiresCustomValidationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MappingDictEntryValue_TypeAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiresCustomDefault",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiresCustomDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMappingDictEntryValueAccess().getRequiresCustomDefaultCustomDefaultKeyword_4_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class MappingDictEntryValue_GreaterThanSignKeyword_5 extends KeywordToken  {
	
	public MappingDictEntryValue_GreaterThanSignKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMappingDictEntryValueAccess().getGreaterThanSignKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MappingDictEntryValue_RequiresCustomDefaultAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MappingDictEntryValue_RequiresCustomValidationAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MappingDictEntryValue_TypeAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule MappingDictEntryValue ****************/


/************ begin Rule StringEntryValue ****************
 *
 * StringEntryValue:
 * 	(textString?="text-string" | asciiString?="ascii-string" | byteString?="byte-string") ("[" rule=StringValidationRule
 * 	"]")?;
 *
 **/

// (textString?="text-string" | asciiString?="ascii-string" | byteString?="byte-string") ("[" rule=StringValidationRule
// "]")?
protected class StringEntryValue_Group extends GroupToken {
	
	public StringEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StringEntryValue_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// textString?="text-string" | asciiString?="ascii-string" | byteString?="byte-string"
protected class StringEntryValue_Alternatives_0 extends AlternativesToken {

	public StringEntryValue_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_TextStringAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StringEntryValue_AsciiStringAssignment_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new StringEntryValue_ByteStringAssignment_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// textString?="text-string"
protected class StringEntryValue_TextStringAssignment_0_0 extends AssignmentToken  {
	
	public StringEntryValue_TextStringAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getTextStringAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textString");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getStringEntryValueAccess().getTextStringTextStringKeyword_0_0_0();
			return obj;
		}
		return null;
	}

}

// asciiString?="ascii-string"
protected class StringEntryValue_AsciiStringAssignment_0_1 extends AssignmentToken  {
	
	public StringEntryValue_AsciiStringAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getAsciiStringAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("asciiString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("asciiString");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getStringEntryValueAccess().getAsciiStringAsciiStringKeyword_0_1_0();
			return obj;
		}
		return null;
	}

}

// byteString?="byte-string"
protected class StringEntryValue_ByteStringAssignment_0_2 extends AssignmentToken  {
	
	public StringEntryValue_ByteStringAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getByteStringAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("byteString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("byteString");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getStringEntryValueAccess().getByteStringByteStringKeyword_0_2_0();
			return obj;
		}
		return null;
	}

}


// ("[" rule=StringValidationRule "]")?
protected class StringEntryValue_Group_1 extends GroupToken {
	
	public StringEntryValue_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_RightSquareBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class StringEntryValue_LeftSquareBracketKeyword_1_0 extends KeywordToken  {
	
	public StringEntryValue_LeftSquareBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getLeftSquareBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rule=StringValidationRule
protected class StringEntryValue_RuleAssignment_1_1 extends AssignmentToken  {
	
	public StringEntryValue_RuleAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getRuleAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValidationRule_StringLengthValidationRuleParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rule",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rule");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringValidationRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStringEntryValueAccess().getRuleStringValidationRuleParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StringEntryValue_LeftSquareBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class StringEntryValue_RightSquareBracketKeyword_1_2 extends KeywordToken  {
	
	public StringEntryValue_RightSquareBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringEntryValueAccess().getRightSquareBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringEntryValue_RuleAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule StringEntryValue ****************/


/************ begin Rule StringValidationRule ****************
 *
 * StringValidationRule:
 * 	StringLengthValidationRule;
 *
 **/

// StringLengthValidationRule
protected class StringValidationRule_StringLengthValidationRuleParserRuleCall extends RuleCallToken {
	
	public StringValidationRule_StringLengthValidationRuleParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getStringValidationRuleAccess().getStringLengthValidationRuleParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringLengthValidationRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringLengthValidationRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StringLengthValidationRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule StringValidationRule ****************/


/************ begin Rule StringLengthValidationRule ****************
 *
 * StringLengthValidationRule:
 * 	"length" length=IntLiteral;
 *
 **/

// "length" length=IntLiteral
protected class StringLengthValidationRule_Group extends GroupToken {
	
	public StringLengthValidationRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStringLengthValidationRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringLengthValidationRule_LengthAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringLengthValidationRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "length"
protected class StringLengthValidationRule_LengthKeyword_0 extends KeywordToken  {
	
	public StringLengthValidationRule_LengthKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringLengthValidationRuleAccess().getLengthKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// length=IntLiteral
protected class StringLengthValidationRule_LengthAssignment_1 extends AssignmentToken  {
	
	public StringLengthValidationRule_LengthAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringLengthValidationRuleAccess().getLengthAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("length",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("length");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStringLengthValidationRuleAccess().getLengthIntLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StringLengthValidationRule_LengthKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule StringLengthValidationRule ****************/


/************ begin Rule AlternativeEntryValue ****************
 *
 * AlternativeEntryValue:
 * 	"(" options+=AbstractEntryValue ("|" options+=AbstractEntryValue)+ ")";
 *
 **/

// "(" options+=AbstractEntryValue ("|" options+=AbstractEntryValue)+ ")"
protected class AlternativeEntryValue_Group extends GroupToken {
	
	public AlternativeEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeEntryValue_RightParenthesisKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAlternativeEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "("
protected class AlternativeEntryValue_LeftParenthesisKeyword_0 extends KeywordToken  {
	
	public AlternativeEntryValue_LeftParenthesisKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getLeftParenthesisKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// options+=AbstractEntryValue
protected class AlternativeEntryValue_OptionsAssignment_1 extends AssignmentToken  {
	
	public AlternativeEntryValue_OptionsAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getOptionsAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("options",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("options");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAlternativeEntryValueAccess().getOptionsAbstractEntryValueParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AlternativeEntryValue_LeftParenthesisKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("|" options+=AbstractEntryValue)+
protected class AlternativeEntryValue_Group_2 extends GroupToken {
	
	public AlternativeEntryValue_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeEntryValue_OptionsAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "|"
protected class AlternativeEntryValue_VerticalLineKeyword_2_0 extends KeywordToken  {
	
	public AlternativeEntryValue_VerticalLineKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getVerticalLineKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeEntryValue_OptionsAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// options+=AbstractEntryValue
protected class AlternativeEntryValue_OptionsAssignment_2_1 extends AssignmentToken  {
	
	public AlternativeEntryValue_OptionsAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getOptionsAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractEntryValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("options",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("options");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractEntryValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAlternativeEntryValueAccess().getOptionsAbstractEntryValueParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AlternativeEntryValue_VerticalLineKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class AlternativeEntryValue_RightParenthesisKeyword_3 extends KeywordToken  {
	
	public AlternativeEntryValue_RightParenthesisKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeEntryValueAccess().getRightParenthesisKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeEntryValue_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AlternativeEntryValue ****************/


/************ begin Rule BooleanEntryValue ****************
 *
 * BooleanEntryValue:
 * 	"bool" {BooleanEntryValue} (hasMustBe?="must-be" requiredValue=Bool | hasDefault?="default" defaultValue=Bool)?;
 *
 **/

// "bool" {BooleanEntryValue} (hasMustBe?="must-be" requiredValue=Bool | hasDefault?="default" defaultValue=Bool)?
protected class BooleanEntryValue_Group extends GroupToken {
	
	public BooleanEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BooleanEntryValue_BooleanEntryValueAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanEntryValueAccess().getBooleanEntryValueAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bool"
protected class BooleanEntryValue_BoolKeyword_0 extends KeywordToken  {
	
	public BooleanEntryValue_BoolKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getBoolKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {BooleanEntryValue}
protected class BooleanEntryValue_BooleanEntryValueAction_1 extends ActionToken  {

	public BooleanEntryValue_BooleanEntryValueAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getBooleanEntryValueAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_BoolKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (hasMustBe?="must-be" requiredValue=Bool | hasDefault?="default" defaultValue=Bool)?
protected class BooleanEntryValue_Alternatives_2 extends AlternativesToken {

	public BooleanEntryValue_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BooleanEntryValue_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=Bool
protected class BooleanEntryValue_Group_2_0 extends GroupToken {
	
	public BooleanEntryValue_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_RequiredValueAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class BooleanEntryValue_HasMustBeAssignment_2_0_0 extends AssignmentToken  {
	
	public BooleanEntryValue_HasMustBeAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getHasMustBeAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_BooleanEntryValueAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBooleanEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=Bool
protected class BooleanEntryValue_RequiredValueAssignment_2_0_1 extends AssignmentToken  {
	
	public BooleanEntryValue_RequiredValueAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getRequiredValueAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_HasMustBeAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanEntryValueAccess().getRequiredValueBoolEnumRuleCall_2_0_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBooleanEntryValueAccess().getRequiredValueBoolEnumRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// hasDefault?="default" defaultValue=Bool
protected class BooleanEntryValue_Group_2_1 extends GroupToken {
	
	public BooleanEntryValue_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_DefaultValueAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class BooleanEntryValue_HasDefaultAssignment_2_1_0 extends AssignmentToken  {
	
	public BooleanEntryValue_HasDefaultAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getHasDefaultAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_BooleanEntryValueAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBooleanEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=Bool
protected class BooleanEntryValue_DefaultValueAssignment_2_1_1 extends AssignmentToken  {
	
	public BooleanEntryValue_DefaultValueAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanEntryValueAccess().getDefaultValueAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanEntryValue_HasDefaultAssignment_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanEntryValueAccess().getDefaultValueBoolEnumRuleCall_2_1_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBooleanEntryValueAccess().getDefaultValueBoolEnumRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule BooleanEntryValue ****************/


/************ begin Rule ReferenceEntryValue ****************
 *
 * ReferenceEntryValue:
 * 	"ref" {ReferenceEntryValue};
 *
 **/

// "ref" {ReferenceEntryValue}
protected class ReferenceEntryValue_Group extends GroupToken {
	
	public ReferenceEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceEntryValue_ReferenceEntryValueAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceEntryValueAccess().getReferenceEntryValueAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "ref"
protected class ReferenceEntryValue_RefKeyword_0 extends KeywordToken  {
	
	public ReferenceEntryValue_RefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceEntryValueAccess().getRefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {ReferenceEntryValue}
protected class ReferenceEntryValue_ReferenceEntryValueAction_1 extends ActionToken  {

	public ReferenceEntryValue_ReferenceEntryValueAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getReferenceEntryValueAccess().getReferenceEntryValueAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceEntryValue_RefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}


/************ end Rule ReferenceEntryValue ****************/


/************ begin Rule ParentReferenceEntryValue ****************
 *
 * ParentReferenceEntryValue:
 * 	"parent-ref" parentType=[DictionaryDeclaration|QualifiedName];
 *
 **/

// "parent-ref" parentType=[DictionaryDeclaration|QualifiedName]
protected class ParentReferenceEntryValue_Group extends GroupToken {
	
	public ParentReferenceEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParentReferenceEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParentReferenceEntryValue_ParentTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParentReferenceEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "parent-ref"
protected class ParentReferenceEntryValue_ParentRefKeyword_0 extends KeywordToken  {
	
	public ParentReferenceEntryValue_ParentRefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParentReferenceEntryValueAccess().getParentRefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// parentType=[DictionaryDeclaration|QualifiedName]
protected class ParentReferenceEntryValue_ParentTypeAssignment_1 extends AssignmentToken  {
	
	public ParentReferenceEntryValue_ParentTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParentReferenceEntryValueAccess().getParentTypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParentReferenceEntryValue_ParentRefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parentType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parentType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParentReferenceEntryValueAccess().getParentTypeDictionaryDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParentReferenceEntryValueAccess().getParentTypeDictionaryDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule ParentReferenceEntryValue ****************/


/************ begin Rule DictionaryObjectEntryValue ****************
 *
 * / **
 *  * This is a rule that representat a simple dictionary with no spcific type.
 *  * / DictionaryObjectEntryValue:
 * 	{DictionaryObjectEntryValue} "dict";
 *
 **/

// {DictionaryObjectEntryValue} "dict"
protected class DictionaryObjectEntryValue_Group extends GroupToken {
	
	public DictionaryObjectEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryObjectEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryObjectEntryValue_DictKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryObjectEntryValueAccess().getDictionaryObjectEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {DictionaryObjectEntryValue}
protected class DictionaryObjectEntryValue_DictionaryObjectEntryValueAction_0 extends ActionToken  {

	public DictionaryObjectEntryValue_DictionaryObjectEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDictionaryObjectEntryValueAccess().getDictionaryObjectEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "dict"
protected class DictionaryObjectEntryValue_DictKeyword_1 extends KeywordToken  {
	
	public DictionaryObjectEntryValue_DictKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryObjectEntryValueAccess().getDictKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryObjectEntryValue_DictionaryObjectEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DictionaryObjectEntryValue ****************/


/************ begin Rule DictionaryDeclarationEntryValue ****************
 *
 * / **
 *  * Reference to a high level dictionary object 
 *  * / DictionaryDeclarationEntryValue:
 * 	"dict-obj" target=[DictionaryDeclaration|QualifiedName];
 *
 **/

// "dict-obj" target=[DictionaryDeclaration|QualifiedName]
protected class DictionaryDeclarationEntryValue_Group extends GroupToken {
	
	public DictionaryDeclarationEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclarationEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDictionaryDeclarationEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "dict-obj"
protected class DictionaryDeclarationEntryValue_DictObjKeyword_0 extends KeywordToken  {
	
	public DictionaryDeclarationEntryValue_DictObjKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationEntryValueAccess().getDictObjKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// target=[DictionaryDeclaration|QualifiedName]
protected class DictionaryDeclarationEntryValue_TargetAssignment_1 extends AssignmentToken  {
	
	public DictionaryDeclarationEntryValue_TargetAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDictionaryDeclarationEntryValueAccess().getTargetAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DictionaryDeclarationEntryValue_DictObjKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("target",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("target");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDictionaryDeclarationEntryValueAccess().getTargetDictionaryDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDictionaryDeclarationEntryValueAccess().getTargetDictionaryDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule DictionaryDeclarationEntryValue ****************/


/************ begin Rule ArrayMappedEntryValue ****************
 *
 * ArrayMappedEntryValue:
 * 	"array-mapped" target=[ArrayMappedDeclaration|QualifiedName];
 *
 **/

// "array-mapped" target=[ArrayMappedDeclaration|QualifiedName]
protected class ArrayMappedEntryValue_Group extends GroupToken {
	
	public ArrayMappedEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayMappedEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayMappedEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "array-mapped"
protected class ArrayMappedEntryValue_ArrayMappedKeyword_0 extends KeywordToken  {
	
	public ArrayMappedEntryValue_ArrayMappedKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayMappedEntryValueAccess().getArrayMappedKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// target=[ArrayMappedDeclaration|QualifiedName]
protected class ArrayMappedEntryValue_TargetAssignment_1 extends AssignmentToken  {
	
	public ArrayMappedEntryValue_TargetAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayMappedEntryValueAccess().getTargetAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayMappedEntryValue_ArrayMappedKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("target",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("target");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArrayMappedEntryValueAccess().getTargetArrayMappedDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getArrayMappedEntryValueAccess().getTargetArrayMappedDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule ArrayMappedEntryValue ****************/


/************ begin Rule BitFlagsEntryValue ****************
 *
 * BitFlagsEntryValue:
 * 	"bit-flags" target=[BitFlagsDeclaration|QualifiedName];
 *
 **/

// "bit-flags" target=[BitFlagsDeclaration|QualifiedName]
protected class BitFlagsEntryValue_Group extends GroupToken {
	
	public BitFlagsEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitFlagsEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitFlagsEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bit-flags"
protected class BitFlagsEntryValue_BitFlagsKeyword_0 extends KeywordToken  {
	
	public BitFlagsEntryValue_BitFlagsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitFlagsEntryValueAccess().getBitFlagsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// target=[BitFlagsDeclaration|QualifiedName]
protected class BitFlagsEntryValue_TargetAssignment_1 extends AssignmentToken  {
	
	public BitFlagsEntryValue_TargetAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitFlagsEntryValueAccess().getTargetAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitFlagsEntryValue_BitFlagsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("target",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("target");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBitFlagsEntryValueAccess().getTargetBitFlagsDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBitFlagsEntryValueAccess().getTargetBitFlagsDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule BitFlagsEntryValue ****************/


/************ begin Rule DateEntryValue ****************
 *
 * DateEntryValue:
 * 	{DateEntryValue} "date";
 *
 **/

// {DateEntryValue} "date"
protected class DateEntryValue_Group extends GroupToken {
	
	public DateEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDateEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateEntryValue_DateKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDateEntryValueAccess().getDateEntryValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {DateEntryValue}
protected class DateEntryValue_DateEntryValueAction_0 extends ActionToken  {

	public DateEntryValue_DateEntryValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDateEntryValueAccess().getDateEntryValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "date"
protected class DateEntryValue_DateKeyword_1 extends KeywordToken  {
	
	public DateEntryValue_DateKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDateEntryValueAccess().getDateKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateEntryValue_DateEntryValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DateEntryValue ****************/


/************ begin Rule NameEnumEntryValue ****************
 *
 * NameEnumEntryValue:
 * 	"name-enum" target=[NameEnumDeclaration|QualifiedName] (hasMustBe?="must-be" requiredValue=NAME_OBJECT |
 * 	hasDefault?="default" defaultValue=NAME_OBJECT)?;
 *
 **/

// "name-enum" target=[NameEnumDeclaration|QualifiedName] (hasMustBe?="must-be" requiredValue=NAME_OBJECT |
// hasDefault?="default" defaultValue=NAME_OBJECT)?
protected class NameEnumEntryValue_Group extends GroupToken {
	
	public NameEnumEntryValue_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNameEnumEntryValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "name-enum"
protected class NameEnumEntryValue_NameEnumKeyword_0 extends KeywordToken  {
	
	public NameEnumEntryValue_NameEnumKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getNameEnumKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// target=[NameEnumDeclaration|QualifiedName]
protected class NameEnumEntryValue_TargetAssignment_1 extends AssignmentToken  {
	
	public NameEnumEntryValue_TargetAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getTargetAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_NameEnumKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("target",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("target");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNameEnumEntryValueAccess().getTargetNameEnumDeclarationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNameEnumEntryValueAccess().getTargetNameEnumDeclarationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (hasMustBe?="must-be" requiredValue=NAME_OBJECT | hasDefault?="default" defaultValue=NAME_OBJECT)?
protected class NameEnumEntryValue_Alternatives_2 extends AlternativesToken {

	public NameEnumEntryValue_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NameEnumEntryValue_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be" requiredValue=NAME_OBJECT
protected class NameEnumEntryValue_Group_2_0 extends GroupToken {
	
	public NameEnumEntryValue_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_RequiredValueAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasMustBe?="must-be"
protected class NameEnumEntryValue_HasMustBeAssignment_2_0_0 extends AssignmentToken  {
	
	public NameEnumEntryValue_HasMustBeAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getHasMustBeAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasMustBe",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasMustBe");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNameEnumEntryValueAccess().getHasMustBeMustBeKeyword_2_0_0_0();
			return obj;
		}
		return null;
	}

}

// requiredValue=NAME_OBJECT
protected class NameEnumEntryValue_RequiredValueAssignment_2_0_1 extends AssignmentToken  {
	
	public NameEnumEntryValue_RequiredValueAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getRequiredValueAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_HasMustBeAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameEnumEntryValueAccess().getRequiredValueNAME_OBJECTTerminalRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// hasDefault?="default" defaultValue=NAME_OBJECT
protected class NameEnumEntryValue_Group_2_1 extends GroupToken {
	
	public NameEnumEntryValue_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_DefaultValueAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasDefault?="default"
protected class NameEnumEntryValue_HasDefaultAssignment_2_1_0 extends AssignmentToken  {
	
	public NameEnumEntryValue_HasDefaultAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getHasDefaultAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_TargetAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasDefault",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasDefault");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNameEnumEntryValueAccess().getHasDefaultDefaultKeyword_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// defaultValue=NAME_OBJECT
protected class NameEnumEntryValue_DefaultValueAssignment_2_1_1 extends AssignmentToken  {
	
	public NameEnumEntryValue_DefaultValueAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNameEnumEntryValueAccess().getDefaultValueAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NameEnumEntryValue_HasDefaultAssignment_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNameEnumEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNameEnumEntryValueAccess().getDefaultValueNAME_OBJECTTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule NameEnumEntryValue ****************/


/************ begin Rule NumberLiteral ****************
 *
 * NumberLiteral:
 * 	IntLiteral | RealLiteral;
 *
 **/

// IntLiteral | RealLiteral
protected class NumberLiteral_Alternatives extends AlternativesToken {

	public NumberLiteral_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNumberLiteralAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NumberLiteral_IntLiteralParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NumberLiteral_RealLiteralParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntLiteralRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRealLiteralRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// IntLiteral
protected class NumberLiteral_IntLiteralParserRuleCall_0 extends RuleCallToken {
	
	public NumberLiteral_IntLiteralParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberLiteralAccess().getIntLiteralParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntLiteralRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntLiteral_ValueAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RealLiteral
protected class NumberLiteral_RealLiteralParserRuleCall_1 extends RuleCallToken {
	
	public NumberLiteral_RealLiteralParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNumberLiteralAccess().getRealLiteralParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RealLiteral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRealLiteralRule().getType().getClassifier())
			return null;
		if(checkForRecursion(RealLiteral_ValueAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule NumberLiteral ****************/


/************ begin Rule IntLiteral ****************
 *
 * IntLiteral:
 * 	value=INT;
 *
 **/

// value=INT
protected class IntLiteral_ValueAssignment extends AssignmentToken  {
	
	public IntLiteral_ValueAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntLiteralAccess().getValueAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntLiteralRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule IntLiteral ****************/


/************ begin Rule RealLiteral ****************
 *
 * RealLiteral:
 * 	value=DOUBLE;
 *
 **/

// value=DOUBLE
protected class RealLiteral_ValueAssignment extends AssignmentToken  {
	
	public RealLiteral_ValueAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealLiteralAccess().getValueAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRealLiteralRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRealLiteralAccess().getValueDOUBLETerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRealLiteralAccess().getValueDOUBLETerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule RealLiteral ****************/



}
