/**
 * <pre>
 * Copyright (c) 1995-2012 levigo holding gmbh. All Rights Reserved.
 * 
 * This software is the proprietary information of levigo holding gmbh.
 * Use is subject to license terms.
 * </pre>
 */
/*
 * generated by Xtext
 */
package com.levigo.jadice.tools.pdf.modelgen.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

import com.levigo.jadice.tools.pdf.modelgen.services.PDFModelGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting on how and when to
 * use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class PDFModelFormatter extends AbstractDeclarativeFormatter {

  @Override
  protected void configureFormatting(FormattingConfig c) {
    c.setAutoLinewrap(120);

    c.setLinewrap(0, 1, 2).before(getGrammarAccess().getSL_COMMENTRule());
    c.setLinewrap(0, 1, 2).before(getGrammarAccess().getML_COMMENTRule());
    c.setLinewrap(0, 1, 1).after(getGrammarAccess().getML_COMMENTRule());

    // keyword after which a newline will be added.
    for (final Keyword k : getGrammarAccess().findKeywords(";", "{", "}")) {
      c.setLinewrap(1, 1, 2).after(k);
    }

    for (final Keyword k : getGrammarAccess().findKeywords("}")) {
      c.setLinewrap(1, 1, 2).before(k);
    }

    for (final Pair<Keyword, Keyword> kp : getGrammarAccess().findKeywordPairs("{", "}")) {
      c.setIndentation(kp.getFirst(), kp.getSecond());
    }

    c.setLinewrap(1).after(getGrammarAccess().getSpecificationReferenceRule());

    c.setLinewrap(1).after(getGrammarAccess().getNameEnumDeclarationAccess().getCommaKeyword_5_0());
  }

  @Override
  protected PDFModelGrammarAccess getGrammarAccess() {
    return (PDFModelGrammarAccess) super.getGrammarAccess();
  }
}
